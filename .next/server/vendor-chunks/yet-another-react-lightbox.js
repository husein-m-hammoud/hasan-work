"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/yet-another-react-lightbox";
exports.ids = ["vendor-chunks/yet-another-react-lightbox"];
exports.modules = {

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/styles.css":
/*!*****************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/styles.css ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"c96acefa030b\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9zdHlsZXMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktcHJvamVjdC8uL25vZGVfbW9kdWxlcy95ZXQtYW5vdGhlci1yZWFjdC1saWdodGJveC9kaXN0L3N0eWxlcy5jc3M/NTg5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcImM5NmFjZWZhMDMwYlwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/styles.css\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION_CLOSE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE),\n/* harmony export */   ACTION_NEXT: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT),\n/* harmony export */   ACTION_PREV: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV),\n/* harmony export */   ACTION_SWIPE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_SWIPE),\n/* harmony export */   ACTIVE_SLIDE_COMPLETE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_COMPLETE),\n/* harmony export */   ACTIVE_SLIDE_ERROR: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_ERROR),\n/* harmony export */   ACTIVE_SLIDE_LOADING: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_LOADING),\n/* harmony export */   ACTIVE_SLIDE_PLAYING: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_PLAYING),\n/* harmony export */   CLASS_FLEX_CENTER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER),\n/* harmony export */   CLASS_FULLSIZE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FULLSIZE),\n/* harmony export */   CLASS_NO_SCROLL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_NO_SCROLL),\n/* harmony export */   CLASS_NO_SCROLL_PADDING: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_NO_SCROLL_PADDING),\n/* harmony export */   CLASS_SLIDE_WRAPPER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_SLIDE_WRAPPER),\n/* harmony export */   Carousel: () => (/* binding */ Carousel),\n/* harmony export */   CarouselModule: () => (/* binding */ CarouselModule),\n/* harmony export */   CloseIcon: () => (/* binding */ CloseIcon),\n/* harmony export */   Controller: () => (/* binding */ Controller),\n/* harmony export */   ControllerContext: () => (/* binding */ ControllerContext),\n/* harmony export */   ControllerModule: () => (/* binding */ ControllerModule),\n/* harmony export */   ELEMENT_BUTTON: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_BUTTON),\n/* harmony export */   ELEMENT_ICON: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_ICON),\n/* harmony export */   EVENT_ON_KEY_DOWN: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_DOWN),\n/* harmony export */   EVENT_ON_KEY_UP: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_UP),\n/* harmony export */   EVENT_ON_POINTER_CANCEL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_CANCEL),\n/* harmony export */   EVENT_ON_POINTER_DOWN: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_DOWN),\n/* harmony export */   EVENT_ON_POINTER_LEAVE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_LEAVE),\n/* harmony export */   EVENT_ON_POINTER_MOVE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_MOVE),\n/* harmony export */   EVENT_ON_POINTER_UP: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_UP),\n/* harmony export */   EVENT_ON_WHEEL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_WHEEL),\n/* harmony export */   ErrorIcon: () => (/* binding */ ErrorIcon),\n/* harmony export */   EventsContext: () => (/* binding */ EventsContext),\n/* harmony export */   EventsProvider: () => (/* binding */ EventsProvider),\n/* harmony export */   IMAGE_FIT_CONTAIN: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_CONTAIN),\n/* harmony export */   IMAGE_FIT_COVER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_COVER),\n/* harmony export */   IconButton: () => (/* binding */ IconButton),\n/* harmony export */   ImageSlide: () => (/* binding */ ImageSlide),\n/* harmony export */   Lightbox: () => (/* binding */ Lightbox),\n/* harmony export */   LightboxDefaultProps: () => (/* binding */ LightboxDefaultProps),\n/* harmony export */   LightboxDispatchContext: () => (/* binding */ LightboxDispatchContext),\n/* harmony export */   LightboxPropsContext: () => (/* binding */ LightboxPropsContext),\n/* harmony export */   LightboxPropsProvider: () => (/* binding */ LightboxPropsProvider),\n/* harmony export */   LightboxStateContext: () => (/* binding */ LightboxStateContext),\n/* harmony export */   LightboxStateProvider: () => (/* binding */ LightboxStateProvider),\n/* harmony export */   LoadingIcon: () => (/* binding */ LoadingIcon),\n/* harmony export */   MODULE_CAROUSEL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CAROUSEL),\n/* harmony export */   MODULE_CONTROLLER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CONTROLLER),\n/* harmony export */   MODULE_NAVIGATION: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_NAVIGATION),\n/* harmony export */   MODULE_NO_SCROLL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_NO_SCROLL),\n/* harmony export */   MODULE_PORTAL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_PORTAL),\n/* harmony export */   MODULE_ROOT: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_ROOT),\n/* harmony export */   MODULE_TOOLBAR: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_TOOLBAR),\n/* harmony export */   Navigation: () => (/* binding */ Navigation),\n/* harmony export */   NavigationButton: () => (/* binding */ NavigationButton),\n/* harmony export */   NavigationModule: () => (/* binding */ NavigationModule),\n/* harmony export */   NextIcon: () => (/* binding */ NextIcon),\n/* harmony export */   NoScroll: () => (/* binding */ NoScroll),\n/* harmony export */   NoScrollModule: () => (/* binding */ NoScrollModule),\n/* harmony export */   PLUGIN_CAPTIONS: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_CAPTIONS),\n/* harmony export */   PLUGIN_COUNTER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_COUNTER),\n/* harmony export */   PLUGIN_DOWNLOAD: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_DOWNLOAD),\n/* harmony export */   PLUGIN_FULLSCREEN: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_FULLSCREEN),\n/* harmony export */   PLUGIN_INLINE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_INLINE),\n/* harmony export */   PLUGIN_SHARE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_SHARE),\n/* harmony export */   PLUGIN_SLIDESHOW: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_SLIDESHOW),\n/* harmony export */   PLUGIN_THUMBNAILS: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_THUMBNAILS),\n/* harmony export */   PLUGIN_ZOOM: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_ZOOM),\n/* harmony export */   Portal: () => (/* binding */ Portal),\n/* harmony export */   PortalModule: () => (/* binding */ PortalModule),\n/* harmony export */   PreviousIcon: () => (/* binding */ PreviousIcon),\n/* harmony export */   Root: () => (/* binding */ Root),\n/* harmony export */   RootModule: () => (/* binding */ RootModule),\n/* harmony export */   SLIDE_STATUS_COMPLETE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_COMPLETE),\n/* harmony export */   SLIDE_STATUS_ERROR: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_ERROR),\n/* harmony export */   SLIDE_STATUS_LOADING: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING),\n/* harmony export */   SLIDE_STATUS_PLACEHOLDER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_PLACEHOLDER),\n/* harmony export */   SLIDE_STATUS_PLAYING: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_PLAYING),\n/* harmony export */   SwipeState: () => (/* binding */ SwipeState),\n/* harmony export */   TimeoutsContext: () => (/* binding */ TimeoutsContext),\n/* harmony export */   TimeoutsProvider: () => (/* binding */ TimeoutsProvider),\n/* harmony export */   Toolbar: () => (/* binding */ Toolbar),\n/* harmony export */   ToolbarModule: () => (/* binding */ ToolbarModule),\n/* harmony export */   UNKNOWN_ACTION_TYPE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.UNKNOWN_ACTION_TYPE),\n/* harmony export */   VK_ARROW_LEFT: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ARROW_LEFT),\n/* harmony export */   VK_ARROW_RIGHT: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ARROW_RIGHT),\n/* harmony export */   VK_ESCAPE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ESCAPE),\n/* harmony export */   activeSlideStatus: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.activeSlideStatus),\n/* harmony export */   addToolbarButton: () => (/* binding */ addToolbarButton),\n/* harmony export */   calculatePreload: () => (/* binding */ calculatePreload),\n/* harmony export */   cleanup: () => (/* binding */ cleanup),\n/* harmony export */   clsx: () => (/* binding */ clsx),\n/* harmony export */   composePrefix: () => (/* binding */ composePrefix),\n/* harmony export */   computeSlideRect: () => (/* binding */ computeSlideRect),\n/* harmony export */   createIcon: () => (/* binding */ createIcon),\n/* harmony export */   createIconDisabled: () => (/* binding */ createIconDisabled),\n/* harmony export */   createModule: () => (/* binding */ createModule),\n/* harmony export */   createNode: () => (/* binding */ createNode),\n/* harmony export */   cssClass: () => (/* binding */ cssClass),\n/* harmony export */   cssVar: () => (/* binding */ cssVar),\n/* harmony export */   \"default\": () => (/* binding */ Lightbox),\n/* harmony export */   devicePixelRatio: () => (/* binding */ devicePixelRatio),\n/* harmony export */   getSlide: () => (/* binding */ getSlide),\n/* harmony export */   getSlideIfPresent: () => (/* binding */ getSlideIfPresent),\n/* harmony export */   getSlideIndex: () => (/* binding */ getSlideIndex),\n/* harmony export */   hasSlides: () => (/* binding */ hasSlides),\n/* harmony export */   hasWindow: () => (/* binding */ hasWindow),\n/* harmony export */   isImageFitCover: () => (/* binding */ isImageFitCover),\n/* harmony export */   isImageSlide: () => (/* binding */ isImageSlide),\n/* harmony export */   label: () => (/* binding */ label),\n/* harmony export */   makeComposePrefix: () => (/* binding */ makeComposePrefix),\n/* harmony export */   makeUseContext: () => (/* binding */ makeUseContext),\n/* harmony export */   parseInt: () => (/* binding */ parseInt),\n/* harmony export */   parseLengthPercentage: () => (/* binding */ parseLengthPercentage),\n/* harmony export */   round: () => (/* binding */ round),\n/* harmony export */   setRef: () => (/* binding */ setRef),\n/* harmony export */   stopNavigationEventsPropagation: () => (/* binding */ stopNavigationEventsPropagation),\n/* harmony export */   useAnimation: () => (/* binding */ useAnimation),\n/* harmony export */   useContainerRect: () => (/* binding */ useContainerRect),\n/* harmony export */   useController: () => (/* binding */ useController),\n/* harmony export */   useDelay: () => (/* binding */ useDelay),\n/* harmony export */   useEventCallback: () => (/* binding */ useEventCallback),\n/* harmony export */   useEvents: () => (/* binding */ useEvents),\n/* harmony export */   useForkRef: () => (/* binding */ useForkRef),\n/* harmony export */   useKeyboardNavigation: () => (/* binding */ useKeyboardNavigation),\n/* harmony export */   useLayoutEffect: () => (/* binding */ useLayoutEffect),\n/* harmony export */   useLightboxDispatch: () => (/* binding */ useLightboxDispatch),\n/* harmony export */   useLightboxProps: () => (/* binding */ useLightboxProps),\n/* harmony export */   useLightboxState: () => (/* binding */ useLightboxState),\n/* harmony export */   useLoseFocus: () => (/* binding */ useLoseFocus),\n/* harmony export */   useMotionPreference: () => (/* binding */ useMotionPreference),\n/* harmony export */   useNavigationState: () => (/* binding */ useNavigationState),\n/* harmony export */   usePointerEvents: () => (/* binding */ usePointerEvents),\n/* harmony export */   usePointerSwipe: () => (/* binding */ usePointerSwipe),\n/* harmony export */   usePreventSwipeNavigation: () => (/* binding */ usePreventSwipeNavigation),\n/* harmony export */   useRTL: () => (/* binding */ useRTL),\n/* harmony export */   useSensors: () => (/* binding */ useSensors),\n/* harmony export */   useThrottle: () => (/* binding */ useThrottle),\n/* harmony export */   useTimeouts: () => (/* binding */ useTimeouts),\n/* harmony export */   useWheelSwipe: () => (/* binding */ useWheelSwipe),\n/* harmony export */   withPlugins: () => (/* binding */ withPlugins)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* __next_internal_client_entry_do_not_use__ ACTIVE_SLIDE_COMPLETE,ACTIVE_SLIDE_ERROR,ACTIVE_SLIDE_LOADING,ACTIVE_SLIDE_PLAYING,CLASS_FULLSIZE,PLUGIN_CAPTIONS,PLUGIN_COUNTER,PLUGIN_DOWNLOAD,PLUGIN_FULLSCREEN,PLUGIN_INLINE,PLUGIN_SHARE,PLUGIN_SLIDESHOW,PLUGIN_THUMBNAILS,PLUGIN_ZOOM,SLIDE_STATUS_PLAYING,ACTION_CLOSE,ACTION_NEXT,ACTION_PREV,ACTION_SWIPE,CLASS_FLEX_CENTER,CLASS_NO_SCROLL,CLASS_NO_SCROLL_PADDING,CLASS_SLIDE_WRAPPER,Carousel,CarouselModule,CloseIcon,Controller,ControllerContext,ControllerModule,ELEMENT_BUTTON,ELEMENT_ICON,EVENT_ON_KEY_DOWN,EVENT_ON_KEY_UP,EVENT_ON_POINTER_CANCEL,EVENT_ON_POINTER_DOWN,EVENT_ON_POINTER_LEAVE,EVENT_ON_POINTER_MOVE,EVENT_ON_POINTER_UP,EVENT_ON_WHEEL,ErrorIcon,EventsContext,EventsProvider,IMAGE_FIT_CONTAIN,IMAGE_FIT_COVER,IconButton,ImageSlide,Lightbox,LightboxDefaultProps,LightboxDispatchContext,LightboxPropsContext,LightboxPropsProvider,LightboxStateContext,LightboxStateProvider,LoadingIcon,MODULE_CAROUSEL,MODULE_CONTROLLER,MODULE_NAVIGATION,MODULE_NO_SCROLL,MODULE_PORTAL,MODULE_ROOT,MODULE_TOOLBAR,Navigation,NavigationButton,NavigationModule,NextIcon,NoScroll,NoScrollModule,Portal,PortalModule,PreviousIcon,Root,RootModule,SLIDE_STATUS_COMPLETE,SLIDE_STATUS_ERROR,SLIDE_STATUS_LOADING,SLIDE_STATUS_PLACEHOLDER,SwipeState,TimeoutsContext,TimeoutsProvider,Toolbar,ToolbarModule,UNKNOWN_ACTION_TYPE,VK_ARROW_LEFT,VK_ARROW_RIGHT,VK_ESCAPE,activeSlideStatus,addToolbarButton,calculatePreload,cleanup,clsx,composePrefix,computeSlideRect,createIcon,createIconDisabled,createModule,createNode,cssClass,cssVar,default,devicePixelRatio,getSlide,getSlideIfPresent,getSlideIndex,hasSlides,hasWindow,isImageFitCover,isImageSlide,label,makeComposePrefix,makeUseContext,parseInt,parseLengthPercentage,round,setRef,stopNavigationEventsPropagation,useAnimation,useContainerRect,useController,useDelay,useEventCallback,useEvents,useForkRef,useKeyboardNavigation,useLayoutEffect,useLightboxDispatch,useLightboxProps,useLightboxState,useLoseFocus,useMotionPreference,useNavigationState,usePointerEvents,usePointerSwipe,usePreventSwipeNavigation,useRTL,useSensors,useThrottle,useTimeouts,useWheelSwipe,withPlugins auto */ \n\n\n\nconst clsx = (...classes)=>[\n        ...classes\n    ].filter((cls)=>Boolean(cls)).join(\" \");\nconst cssPrefix$3 = \"yarl__\";\nconst cssClass = (name)=>`${cssPrefix$3}${name}`;\nconst cssVar = (name)=>`--${cssPrefix$3}${name}`;\nconst composePrefix = (base, prefix)=>`${base}${prefix ? `_${prefix}` : \"\"}`;\nconst makeComposePrefix = (base)=>(prefix)=>composePrefix(base, prefix);\nconst label = (labels, lbl)=>labels && labels[lbl] ? labels[lbl] : lbl;\nconst cleanup = (...cleaners)=>()=>{\n        cleaners.forEach((cleaner)=>{\n            cleaner();\n        });\n    };\nconst makeUseContext = (name, contextName, context)=>()=>{\n        const ctx = react__WEBPACK_IMPORTED_MODULE_0__.useContext(context);\n        if (!ctx) {\n            throw new Error(`${name} must be used within a ${contextName}.Provider`);\n        }\n        return ctx;\n    };\nconst hasWindow = ()=>\"undefined\" !== \"undefined\";\nfunction round(value, decimals = 0) {\n    const factor = 10 ** decimals;\n    return Math.round((value + Number.EPSILON) * factor) / factor;\n}\nconst isImageSlide = (slide)=>slide.type === undefined || slide.type === \"image\";\nconst isImageFitCover = (image, imageFit)=>image.imageFit === _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_COVER || image.imageFit !== _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_CONTAIN && imageFit === _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_COVER;\nfunction parseInt(value) {\n    return typeof value === \"string\" ? Number.parseInt(value, 10) : value;\n}\nfunction parseLengthPercentage(input) {\n    if (typeof input === \"number\") {\n        return {\n            pixel: input\n        };\n    }\n    if (typeof input === \"string\") {\n        const value = parseInt(input);\n        return input.endsWith(\"%\") ? {\n            percent: value\n        } : {\n            pixel: value\n        };\n    }\n    return {\n        pixel: 0\n    };\n}\nfunction computeSlideRect(containerRect, padding) {\n    const paddingValue = parseLengthPercentage(padding);\n    const paddingPixels = paddingValue.percent !== undefined ? containerRect.width / 100 * paddingValue.percent : paddingValue.pixel;\n    return {\n        width: Math.max(containerRect.width - 2 * paddingPixels, 0),\n        height: Math.max(containerRect.height - 2 * paddingPixels, 0)\n    };\n}\nconst devicePixelRatio = ()=>(hasWindow() ? window === null || window === void 0 ? void 0 : window.devicePixelRatio : undefined) || 1;\nconst getSlideIndex = (index, slidesCount)=>slidesCount > 0 ? (index % slidesCount + slidesCount) % slidesCount : 0;\nconst hasSlides = (slides)=>slides.length > 0;\nconst getSlide = (slides, index)=>slides[getSlideIndex(index, slides.length)];\nconst getSlideIfPresent = (slides, index)=>hasSlides(slides) ? getSlide(slides, index) : undefined;\nfunction addToolbarButton(toolbar, key, button) {\n    if (!button) return toolbar;\n    const { buttons, ...restToolbar } = toolbar;\n    const index = buttons.findIndex((item)=>item === key);\n    const buttonWithKey = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(button) ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(button, {\n        key\n    }, null) : button;\n    if (index >= 0) {\n        const result = [\n            ...buttons\n        ];\n        result.splice(index, 1, buttonWithKey);\n        return {\n            buttons: result,\n            ...restToolbar\n        };\n    }\n    return {\n        buttons: [\n            buttonWithKey,\n            ...buttons\n        ],\n        ...restToolbar\n    };\n}\nfunction stopNavigationEventsPropagation() {\n    const stopPropagation = (event)=>{\n        event.stopPropagation();\n    };\n    return {\n        onPointerDown: stopPropagation,\n        onKeyDown: stopPropagation,\n        onWheel: stopPropagation\n    };\n}\nfunction calculatePreload(carousel, slides, minimum = 0) {\n    return Math.min(carousel.preload, Math.max(carousel.finite ? slides.length - 1 : Math.floor(slides.length / 2), minimum));\n}\nconst LightboxDefaultProps = {\n    open: false,\n    close: ()=>{},\n    index: 0,\n    slides: [],\n    render: {},\n    plugins: [],\n    toolbar: {\n        buttons: [\n            _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE\n        ]\n    },\n    labels: {},\n    animation: {\n        fade: 250,\n        swipe: 500,\n        easing: {\n            fade: \"ease\",\n            swipe: \"ease-out\",\n            navigation: \"ease-in-out\"\n        }\n    },\n    carousel: {\n        finite: false,\n        preload: 2,\n        padding: \"16px\",\n        spacing: \"30%\",\n        imageFit: _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_CONTAIN,\n        imageProps: {}\n    },\n    controller: {\n        ref: null,\n        focus: true,\n        aria: false,\n        touchAction: \"none\",\n        closeOnPullDown: false,\n        closeOnBackdropClick: false\n    },\n    portal: {},\n    noScroll: {\n        disabled: false\n    },\n    on: {},\n    styles: {},\n    className: \"\"\n};\nfunction createModule(name, component) {\n    return {\n        name,\n        component\n    };\n}\nfunction createNode(module, children) {\n    return {\n        module,\n        children\n    };\n}\nfunction traverseNode(node, target, apply) {\n    if (node.module.name === target) {\n        return apply(node);\n    }\n    if (node.children) {\n        return [\n            createNode(node.module, node.children.flatMap((n)=>{\n                var _a;\n                return (_a = traverseNode(n, target, apply)) !== null && _a !== void 0 ? _a : [];\n            }))\n        ];\n    }\n    return [\n        node\n    ];\n}\nfunction traverse(nodes, target, apply) {\n    return nodes.flatMap((node)=>{\n        var _a;\n        return (_a = traverseNode(node, target, apply)) !== null && _a !== void 0 ? _a : [];\n    });\n}\nfunction withPlugins(root, plugins = [], augmentations = []) {\n    let config = root;\n    const contains = (target)=>{\n        const nodes = [\n            ...config\n        ];\n        while(nodes.length > 0){\n            const node = nodes.pop();\n            if ((node === null || node === void 0 ? void 0 : node.module.name) === target) return true;\n            if (node === null || node === void 0 ? void 0 : node.children) nodes.push(...node.children);\n        }\n        return false;\n    };\n    const addParent = (target, module)=>{\n        if (target === \"\") {\n            config = [\n                createNode(module, config)\n            ];\n            return;\n        }\n        config = traverse(config, target, (node)=>[\n                createNode(module, [\n                    node\n                ])\n            ]);\n    };\n    const append = (target, module)=>{\n        config = traverse(config, target, (node)=>[\n                createNode(node.module, [\n                    createNode(module, node.children)\n                ])\n            ]);\n    };\n    const addChild = (target, module, precede)=>{\n        config = traverse(config, target, (node)=>{\n            var _a;\n            return [\n                createNode(node.module, [\n                    ...precede ? [\n                        createNode(module)\n                    ] : [],\n                    ...(_a = node.children) !== null && _a !== void 0 ? _a : [],\n                    ...!precede ? [\n                        createNode(module)\n                    ] : []\n                ])\n            ];\n        });\n    };\n    const addSibling = (target, module, precede)=>{\n        config = traverse(config, target, (node)=>[\n                ...precede ? [\n                    createNode(module)\n                ] : [],\n                node,\n                ...!precede ? [\n                    createNode(module)\n                ] : []\n            ]);\n    };\n    const addModule = (module)=>{\n        append(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CONTROLLER, module);\n    };\n    const replace = (target, module)=>{\n        config = traverse(config, target, (node)=>[\n                createNode(module, node.children)\n            ]);\n    };\n    const remove = (target)=>{\n        config = traverse(config, target, (node)=>node.children);\n    };\n    const augment = (augmentation)=>{\n        augmentations.push(augmentation);\n    };\n    plugins.forEach((plugin)=>{\n        plugin({\n            contains,\n            addParent,\n            append,\n            addChild,\n            addSibling,\n            addModule,\n            replace,\n            remove,\n            augment\n        });\n    });\n    return {\n        config,\n        augmentation: (props)=>augmentations.reduce((acc, augmentation)=>augmentation(acc), props)\n    };\n}\nconst EventsContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useEvents = makeUseContext(\"useEvents\", \"EventsContext\", EventsContext);\nfunction EventsProvider({ children }) {\n    const [subscriptions] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>()=>{\n            Object.keys(subscriptions).forEach((topic)=>delete subscriptions[topic]);\n        }, [\n        subscriptions\n    ]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const unsubscribe = (topic, callback)=>{\n            var _a;\n            (_a = subscriptions[topic]) === null || _a === void 0 ? void 0 : _a.splice(0, subscriptions[topic].length, ...subscriptions[topic].filter((cb)=>cb !== callback));\n        };\n        const subscribe = (topic, callback)=>{\n            if (!subscriptions[topic]) {\n                subscriptions[topic] = [];\n            }\n            subscriptions[topic].push(callback);\n            return ()=>unsubscribe(topic, callback);\n        };\n        const publish = (...[topic, event])=>{\n            var _a;\n            (_a = subscriptions[topic]) === null || _a === void 0 ? void 0 : _a.forEach((callback)=>callback(event));\n        };\n        return {\n            publish,\n            subscribe,\n            unsubscribe\n        };\n    }, [\n        subscriptions\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(EventsContext.Provider, {\n        value: context\n    }, children);\n}\nconst LightboxPropsContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useLightboxProps = makeUseContext(\"useLightboxProps\", \"LightboxPropsContext\", LightboxPropsContext);\nfunction LightboxPropsProvider({ children, ...props }) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxPropsContext.Provider, {\n        value: props\n    }, children);\n}\nconst LightboxStateContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useLightboxState = makeUseContext(\"useLightboxState\", \"LightboxStateContext\", LightboxStateContext);\nconst LightboxDispatchContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useLightboxDispatch = makeUseContext(\"useLightboxDispatch\", \"LightboxDispatchContext\", LightboxDispatchContext);\nfunction reducer(state, action) {\n    switch(action.type){\n        case \"swipe\":\n            {\n                const { slides } = state;\n                const increment = (action === null || action === void 0 ? void 0 : action.increment) || 0;\n                const globalIndex = state.globalIndex + increment;\n                const currentIndex = getSlideIndex(globalIndex, slides.length);\n                const currentSlide = getSlideIfPresent(slides, currentIndex);\n                const animation = increment || action.duration ? {\n                    increment,\n                    duration: action.duration,\n                    easing: action.easing\n                } : undefined;\n                return {\n                    slides,\n                    currentIndex,\n                    globalIndex,\n                    currentSlide,\n                    animation\n                };\n            }\n        case \"update\":\n            if (action.slides !== state.slides || action.index !== state.currentIndex) {\n                return {\n                    slides: action.slides,\n                    currentIndex: action.index,\n                    globalIndex: action.index,\n                    currentSlide: getSlideIfPresent(action.slides, action.index)\n                };\n            }\n            return state;\n        default:\n            throw new Error(_types_js__WEBPACK_IMPORTED_MODULE_2__.UNKNOWN_ACTION_TYPE);\n    }\n}\nfunction LightboxStateProvider({ slides, index, children }) {\n    const [state, dispatch] = react__WEBPACK_IMPORTED_MODULE_0__.useReducer(reducer, {\n        slides,\n        currentIndex: index,\n        globalIndex: index,\n        currentSlide: getSlideIfPresent(slides, index)\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        dispatch({\n            type: \"update\",\n            slides,\n            index\n        });\n    }, [\n        slides,\n        index\n    ]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            ...state,\n            state,\n            dispatch\n        }), [\n        state,\n        dispatch\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxDispatchContext.Provider, {\n        value: dispatch\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxStateContext.Provider, {\n        value: context\n    }, children));\n}\nconst TimeoutsContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useTimeouts = makeUseContext(\"useTimeouts\", \"TimeoutsContext\", TimeoutsContext);\nfunction TimeoutsProvider({ children }) {\n    const [timeouts] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>()=>{\n            timeouts.forEach((tid)=>window.clearTimeout(tid));\n            timeouts.splice(0, timeouts.length);\n        }, [\n        timeouts\n    ]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const removeTimeout = (id)=>{\n            timeouts.splice(0, timeouts.length, ...timeouts.filter((tid)=>tid !== id));\n        };\n        const setTimeout = (fn, delay)=>{\n            const id = window.setTimeout(()=>{\n                removeTimeout(id);\n                fn();\n            }, delay);\n            timeouts.push(id);\n            return id;\n        };\n        const clearTimeout = (id)=>{\n            if (id !== undefined) {\n                removeTimeout(id);\n                window.clearTimeout(id);\n            }\n        };\n        return {\n            setTimeout,\n            clearTimeout\n        };\n    }, [\n        timeouts\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TimeoutsContext.Provider, {\n        value: context\n    }, children);\n}\nconst IconButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function IconButton({ label: label$1, className, icon: Icon, renderIcon, onClick, style, ...rest }, ref) {\n    const { styles, labels } = useLightboxProps();\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        ref: ref,\n        type: \"button\",\n        \"aria-label\": label(labels, label$1),\n        className: clsx(cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_BUTTON), className),\n        onClick: onClick,\n        style: {\n            ...style,\n            ...styles.button\n        },\n        ...rest\n    }, renderIcon ? renderIcon() : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icon, {\n        className: cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_ICON),\n        style: styles.icon\n    }));\n});\nfunction svgIcon(name, children) {\n    const icon = (props)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            viewBox: \"0 0 24 24\",\n            width: \"24\",\n            height: \"24\",\n            \"aria-hidden\": \"true\",\n            focusable: \"false\",\n            ...props\n        }, children);\n    icon.displayName = name;\n    return icon;\n}\nfunction createIcon(name, glyph) {\n    return svgIcon(name, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n        fill: \"currentColor\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 0h24v24H0z\",\n        fill: \"none\"\n    }), glyph));\n}\nfunction createIconDisabled(name, glyph) {\n    return svgIcon(name, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"defs\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"mask\", {\n        id: \"strike\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 0h24v24H0z\",\n        fill: \"white\"\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 0L24 24\",\n        stroke: \"black\",\n        strokeWidth: 4\n    }))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0.70707 2.121320L21.878680 23.292883\",\n        stroke: \"currentColor\",\n        strokeWidth: 2\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n        fill: \"currentColor\",\n        mask: \"url(#strike)\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 0h24v24H0z\",\n        fill: \"none\"\n    }), glyph)));\n}\nconst CloseIcon = createIcon(\"Close\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}));\nconst PreviousIcon = createIcon(\"Previous\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n}));\nconst NextIcon = createIcon(\"Next\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}));\nconst LoadingIcon = createIcon(\"Loading\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, Array.from({\n    length: 8\n}).map((_, index, array)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"line\", {\n        key: index,\n        x1: \"12\",\n        y1: \"6.5\",\n        x2: \"12\",\n        y2: \"1.8\",\n        strokeLinecap: \"round\",\n        strokeWidth: \"2.6\",\n        stroke: \"currentColor\",\n        strokeOpacity: 1 / array.length * (index + 1),\n        transform: `rotate(${360 / array.length * index}, 12, 12)`\n    }))));\nconst ErrorIcon = createIcon(\"Error\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M21.9,21.9l-8.49-8.49l0,0L3.59,3.59l0,0L2.1,2.1L0.69,3.51L3,5.83V19c0,1.1,0.9,2,2,2h13.17l2.31,2.31L21.9,21.9z M5,18 l3.5-4.5l2.5,3.01L12.17,15l3,3H5z M21,18.17L5.83,3H19c1.1,0,2,0.9,2,2V18.17z\"\n}));\nconst useLayoutEffect = hasWindow() ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\nfunction useMotionPreference() {\n    const [reduceMotion, setReduceMotion] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        var _a, _b;\n        const mediaQuery = (_a = window.matchMedia) === null || _a === void 0 ? void 0 : _a.call(window, \"(prefers-reduced-motion: reduce)\");\n        setReduceMotion(mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.matches);\n        const listener = (event)=>setReduceMotion(event.matches);\n        (_b = mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.addEventListener) === null || _b === void 0 ? void 0 : _b.call(mediaQuery, \"change\", listener);\n        return ()=>{\n            var _a;\n            return (_a = mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.removeEventListener) === null || _a === void 0 ? void 0 : _a.call(mediaQuery, \"change\", listener);\n        };\n    }, []);\n    return reduceMotion;\n}\nfunction currentTransformation(node) {\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    const matrix = window.getComputedStyle(node).transform;\n    const matcher = matrix.match(/matrix.*\\((.+)\\)/);\n    if (matcher) {\n        const values = matcher[1].split(\",\").map(parseInt);\n        if (values.length === 6) {\n            x = values[4];\n            y = values[5];\n        } else if (values.length === 16) {\n            x = values[12];\n            y = values[13];\n            z = values[14];\n        }\n    }\n    return {\n        x,\n        y,\n        z\n    };\n}\nfunction useAnimation(nodeRef, computeAnimation) {\n    const snapshot = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const animation = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const reduceMotion = useMotionPreference();\n    useLayoutEffect(()=>{\n        var _a, _b, _c;\n        if (nodeRef.current && snapshot.current !== undefined && !reduceMotion) {\n            const { keyframes, duration, easing, onfinish } = computeAnimation(snapshot.current, nodeRef.current.getBoundingClientRect(), currentTransformation(nodeRef.current)) || {};\n            if (keyframes && duration) {\n                (_a = animation.current) === null || _a === void 0 ? void 0 : _a.cancel();\n                animation.current = undefined;\n                try {\n                    animation.current = (_c = (_b = nodeRef.current).animate) === null || _c === void 0 ? void 0 : _c.call(_b, keyframes, {\n                        duration,\n                        easing\n                    });\n                } catch (err) {\n                    console.error(err);\n                }\n                if (animation.current) {\n                    animation.current.onfinish = ()=>{\n                        animation.current = undefined;\n                        onfinish === null || onfinish === void 0 ? void 0 : onfinish();\n                    };\n                }\n            }\n        }\n        snapshot.current = undefined;\n    });\n    return {\n        prepareAnimation: (currentSnapshot)=>{\n            snapshot.current = currentSnapshot;\n        },\n        isAnimationPlaying: ()=>{\n            var _a;\n            return ((_a = animation.current) === null || _a === void 0 ? void 0 : _a.playState) === \"running\";\n        }\n    };\n}\nfunction useContainerRect() {\n    const containerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const observerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const [containerRect, setContainerRect] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const setContainerRef = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((node)=>{\n        containerRef.current = node;\n        if (observerRef.current) {\n            observerRef.current.disconnect();\n            observerRef.current = undefined;\n        }\n        const updateContainerRect = ()=>{\n            if (node) {\n                const styles = window.getComputedStyle(node);\n                const parse = (value)=>parseFloat(value) || 0;\n                setContainerRect({\n                    width: Math.round(node.clientWidth - parse(styles.paddingLeft) - parse(styles.paddingRight)),\n                    height: Math.round(node.clientHeight - parse(styles.paddingTop) - parse(styles.paddingBottom))\n                });\n            } else {\n                setContainerRect(undefined);\n            }\n        };\n        updateContainerRect();\n        if (node && typeof ResizeObserver !== \"undefined\") {\n            observerRef.current = new ResizeObserver(updateContainerRect);\n            observerRef.current.observe(node);\n        }\n    }, []);\n    return {\n        setContainerRef,\n        containerRef,\n        containerRect\n    };\n}\nfunction useDelay() {\n    const timeoutId = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const { setTimeout, clearTimeout } = useTimeouts();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback((callback, delay)=>{\n        clearTimeout(timeoutId.current);\n        timeoutId.current = setTimeout(callback, delay > 0 ? delay : 0);\n    }, [\n        setTimeout,\n        clearTimeout\n    ]);\n}\nfunction useEventCallback(fn) {\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(fn);\n    useLayoutEffect(()=>{\n        ref.current = fn;\n    });\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback((...args)=>{\n        var _a;\n        return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.call(ref, ...args);\n    }, []);\n}\nfunction setRef(ref, value) {\n    if (typeof ref === \"function\") {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction useForkRef(refA, refB) {\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>refA == null && refB == null ? null : (refValue)=>{\n            setRef(refA, refValue);\n            setRef(refB, refValue);\n        }, [\n        refA,\n        refB\n    ]);\n}\nfunction useLoseFocus(focus, disabled = false) {\n    const focused = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    useLayoutEffect(()=>{\n        if (disabled && focused.current) {\n            focused.current = false;\n            focus();\n        }\n    }, [\n        disabled,\n        focus\n    ]);\n    const onFocus = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        focused.current = true;\n    }, []);\n    const onBlur = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        focused.current = false;\n    }, []);\n    return {\n        onFocus,\n        onBlur\n    };\n}\nfunction useRTL() {\n    const [isRTL, setIsRTL] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    useLayoutEffect(()=>{\n        setIsRTL(window.getComputedStyle(window.document.documentElement).direction === \"rtl\");\n    }, []);\n    return isRTL;\n}\nfunction useSensors() {\n    const [subscribers] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    const notifySubscribers = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((type, event)=>{\n        var _a;\n        (_a = subscribers[type]) === null || _a === void 0 ? void 0 : _a.forEach((listener)=>{\n            if (!event.isPropagationStopped()) listener(event);\n        });\n    }, [\n        subscribers\n    ]);\n    const registerSensors = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            onPointerDown: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_DOWN, event),\n            onPointerMove: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_MOVE, event),\n            onPointerUp: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_UP, event),\n            onPointerLeave: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_LEAVE, event),\n            onPointerCancel: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_CANCEL, event),\n            onKeyDown: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_DOWN, event),\n            onKeyUp: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_UP, event),\n            onWheel: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_WHEEL, event)\n        }), [\n        notifySubscribers\n    ]);\n    const subscribeSensors = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((type, callback)=>{\n        if (!subscribers[type]) {\n            subscribers[type] = [];\n        }\n        subscribers[type].unshift(callback);\n        return ()=>{\n            const listeners = subscribers[type];\n            if (listeners) {\n                listeners.splice(0, listeners.length, ...listeners.filter((el)=>el !== callback));\n            }\n        };\n    }, [\n        subscribers\n    ]);\n    return {\n        registerSensors,\n        subscribeSensors\n    };\n}\nfunction useThrottle(callback, delay) {\n    const lastCallbackTime = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const delayCallback = useDelay();\n    const executeCallback = useEventCallback((...args)=>{\n        lastCallbackTime.current = Date.now();\n        callback(args);\n    });\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback((...args)=>{\n        delayCallback(()=>{\n            executeCallback(args);\n        }, delay - (Date.now() - lastCallbackTime.current));\n    }, [\n        delay,\n        executeCallback,\n        delayCallback\n    ]);\n}\nconst slidePrefix = makeComposePrefix(\"slide\");\nconst slideImagePrefix = makeComposePrefix(\"slide_image\");\nfunction ImageSlide({ slide: image, offset, render, rect, imageFit, imageProps, onClick, onLoad, style }) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const [status, setStatus] = react__WEBPACK_IMPORTED_MODULE_0__.useState(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING);\n    const { publish } = useEvents();\n    const { setTimeout } = useTimeouts();\n    const imageRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (offset === 0) {\n            publish((0,_types_js__WEBPACK_IMPORTED_MODULE_2__.activeSlideStatus)(status));\n        }\n    }, [\n        offset,\n        status,\n        publish\n    ]);\n    const handleLoading = useEventCallback((img)=>{\n        (\"decode\" in img ? img.decode() : Promise.resolve()).catch(()=>{}).then(()=>{\n            if (!img.parentNode) {\n                return;\n            }\n            setStatus(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_COMPLETE);\n            setTimeout(()=>{\n                onLoad === null || onLoad === void 0 ? void 0 : onLoad(img);\n            }, 0);\n        });\n    });\n    const setImageRef = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((img)=>{\n        imageRef.current = img;\n        if (img === null || img === void 0 ? void 0 : img.complete) {\n            handleLoading(img);\n        }\n    }, [\n        handleLoading\n    ]);\n    const handleOnLoad = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event)=>{\n        handleLoading(event.currentTarget);\n    }, [\n        handleLoading\n    ]);\n    const onError = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        setStatus(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_ERROR);\n    }, []);\n    const cover = isImageFitCover(image, imageFit);\n    const nonInfinite = (value, fallback)=>Number.isFinite(value) ? value : fallback;\n    const maxWidth = nonInfinite(Math.max(...((_b = (_a = image.srcSet) === null || _a === void 0 ? void 0 : _a.map((x)=>x.width)) !== null && _b !== void 0 ? _b : []).concat(image.width ? [\n        image.width\n    ] : []).filter(Boolean)), ((_c = imageRef.current) === null || _c === void 0 ? void 0 : _c.naturalWidth) || 0);\n    const maxHeight = nonInfinite(Math.max(...((_e = (_d = image.srcSet) === null || _d === void 0 ? void 0 : _d.map((x)=>x.height)) !== null && _e !== void 0 ? _e : []).concat(image.height ? [\n        image.height\n    ] : []).filter(Boolean)), ((_f = imageRef.current) === null || _f === void 0 ? void 0 : _f.naturalHeight) || 0);\n    const defaultStyle = maxWidth && maxHeight ? {\n        maxWidth: `min(${maxWidth}px, 100%)`,\n        maxHeight: `min(${maxHeight}px, 100%)`\n    } : {\n        maxWidth: \"100%\",\n        maxHeight: \"100%\"\n    };\n    const srcSet = (_g = image.srcSet) === null || _g === void 0 ? void 0 : _g.sort((a, b)=>a.width - b.width).map((item)=>`${item.src} ${item.width}w`).join(\", \");\n    const estimateActualWidth = ()=>rect && !cover && image.width && image.height ? rect.height / image.height * image.width : Number.MAX_VALUE;\n    const sizes = srcSet && rect && hasWindow() ? `${Math.round(Math.min(estimateActualWidth(), rect.width))}px` : undefined;\n    const { style: imagePropsStyle, className: imagePropsClassName, ...restImageProps } = imageProps || {};\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n        ref: setImageRef,\n        onLoad: handleOnLoad,\n        onError: onError,\n        onClick: onClick,\n        draggable: false,\n        className: clsx(cssClass(slideImagePrefix()), cover && cssClass(slideImagePrefix(\"cover\")), status !== _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_COMPLETE && cssClass(slideImagePrefix(\"loading\")), imagePropsClassName),\n        style: {\n            ...defaultStyle,\n            ...style,\n            ...imagePropsStyle\n        },\n        ...restImageProps,\n        alt: image.alt,\n        sizes: sizes,\n        srcSet: srcSet,\n        src: image.src\n    }), status !== _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_COMPLETE && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: cssClass(slidePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_PLACEHOLDER))\n    }, status === _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING && ((render === null || render === void 0 ? void 0 : render.iconLoading) ? render.iconLoading() : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LoadingIcon, {\n        className: clsx(cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_ICON), cssClass(slidePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING)))\n    })), status === _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_ERROR && ((render === null || render === void 0 ? void 0 : render.iconError) ? render.iconError() : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorIcon, {\n        className: clsx(cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_ICON), cssClass(slidePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_ERROR)))\n    }))));\n}\nvar SwipeState;\n(function(SwipeState) {\n    SwipeState[SwipeState[\"NONE\"] = 0] = \"NONE\";\n    SwipeState[SwipeState[\"SWIPE\"] = 1] = \"SWIPE\";\n    SwipeState[SwipeState[\"PULL_DOWN\"] = 2] = \"PULL_DOWN\";\n    SwipeState[SwipeState[\"ANIMATION\"] = 3] = \"ANIMATION\";\n})(SwipeState || (SwipeState = {}));\nfunction usePointerEvents(subscribeSensors, onPointerDown, onPointerMove, onPointerUp, disabled) {\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>!disabled ? cleanup(subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_DOWN, onPointerDown), subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_MOVE, onPointerMove), subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_UP, onPointerUp), subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_LEAVE, onPointerUp), subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_CANCEL, onPointerUp)) : ()=>{}, [\n        subscribeSensors,\n        onPointerDown,\n        onPointerMove,\n        onPointerUp,\n        disabled\n    ]);\n}\nvar Gesture;\n(function(Gesture) {\n    Gesture[Gesture[\"NONE\"] = 0] = \"NONE\";\n    Gesture[Gesture[\"SWIPE\"] = 1] = \"SWIPE\";\n    Gesture[Gesture[\"PULL_DOWN\"] = 2] = \"PULL_DOWN\";\n})(Gesture || (Gesture = {}));\nconst SWIPE_THRESHOLD = 30;\nfunction usePointerSwipe(subscribeSensors, isSwipeValid, containerWidth, swipeAnimationDuration, onSwipeStart, onSwipeProgress, onSwipeFinish, onSwipeCancel, pullDownEnabled, onPullDownStart, onPullDownProgress, onPullDownFinish, onPullDownCancel) {\n    const offset = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const pointers = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);\n    const activePointer = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const startTime = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const gesture = react__WEBPACK_IMPORTED_MODULE_0__.useRef(Gesture.NONE);\n    const clearPointer = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event)=>{\n        if (activePointer.current === event.pointerId) {\n            activePointer.current = undefined;\n            gesture.current = Gesture.NONE;\n        }\n        const currentPointers = pointers.current;\n        currentPointers.splice(0, currentPointers.length, ...currentPointers.filter((p)=>p.pointerId !== event.pointerId));\n    }, []);\n    const addPointer = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event)=>{\n        clearPointer(event);\n        event.persist();\n        pointers.current.push(event);\n    }, [\n        clearPointer\n    ]);\n    const onPointerDown = useEventCallback((event)=>{\n        addPointer(event);\n    });\n    const onPointerUp = useEventCallback((event)=>{\n        if (pointers.current.find((x)=>x.pointerId === event.pointerId) && activePointer.current === event.pointerId) {\n            const duration = Date.now() - startTime.current;\n            const currentOffset = offset.current;\n            if (gesture.current === Gesture.SWIPE) {\n                if (Math.abs(currentOffset) > 0.3 * containerWidth || Math.abs(currentOffset) > 5 && duration < swipeAnimationDuration) {\n                    onSwipeFinish(currentOffset, duration);\n                } else {\n                    onSwipeCancel(currentOffset);\n                }\n            } else if (gesture.current === Gesture.PULL_DOWN) {\n                if (currentOffset > 2 * SWIPE_THRESHOLD) {\n                    onPullDownFinish(currentOffset, duration);\n                } else {\n                    onPullDownCancel(currentOffset);\n                }\n            }\n            offset.current = 0;\n            gesture.current = Gesture.NONE;\n        }\n        clearPointer(event);\n    });\n    const onPointerMove = useEventCallback((event)=>{\n        const pointer = pointers.current.find((p)=>p.pointerId === event.pointerId);\n        if (pointer) {\n            const isCurrentPointer = activePointer.current === event.pointerId;\n            if (event.buttons === 0) {\n                if (isCurrentPointer && offset.current !== 0) {\n                    onPointerUp(event);\n                } else {\n                    clearPointer(pointer);\n                }\n                return;\n            }\n            const deltaX = event.clientX - pointer.clientX;\n            const deltaY = event.clientY - pointer.clientY;\n            if (activePointer.current === undefined) {\n                const startGesture = (newGesture)=>{\n                    addPointer(event);\n                    activePointer.current = event.pointerId;\n                    startTime.current = Date.now();\n                    gesture.current = newGesture;\n                };\n                if (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > SWIPE_THRESHOLD && isSwipeValid(deltaX)) {\n                    startGesture(Gesture.SWIPE);\n                    onSwipeStart();\n                } else if (pullDownEnabled && Math.abs(deltaY) > Math.abs(deltaX) && deltaY > SWIPE_THRESHOLD) {\n                    startGesture(Gesture.PULL_DOWN);\n                    onPullDownStart();\n                }\n            } else if (isCurrentPointer) {\n                if (gesture.current === Gesture.SWIPE) {\n                    offset.current = deltaX;\n                    onSwipeProgress(deltaX);\n                } else if (gesture.current === Gesture.PULL_DOWN) {\n                    offset.current = deltaY;\n                    onPullDownProgress(deltaY);\n                }\n            }\n        }\n    });\n    usePointerEvents(subscribeSensors, onPointerDown, onPointerMove, onPointerUp);\n}\nconst WHEEL = \"wheel\";\nfunction preventDefault(event) {\n    if (Math.abs(event.deltaX) > Math.abs(event.deltaY) || event.ctrlKey) {\n        event.preventDefault();\n    }\n}\nfunction usePreventSwipeNavigation() {\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback((node)=>{\n        var _a;\n        if (node) {\n            node.addEventListener(WHEEL, preventDefault, {\n                passive: false\n            });\n        } else {\n            (_a = ref.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(WHEEL, preventDefault);\n        }\n        ref.current = node;\n    }, []);\n}\nfunction useWheelSwipe(swipeState, subscribeSensors, isSwipeValid, containerWidth, swipeAnimationDuration, onSwipeStart, onSwipeProgress, onSwipeFinish, onSwipeCancel) {\n    const offset = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const intent = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const intentCleanup = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const resetCleanup = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const wheelResidualMomentum = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const startTime = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const { setTimeout, clearTimeout } = useTimeouts();\n    const cancelSwipeIntentCleanup = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        if (intentCleanup.current) {\n            clearTimeout(intentCleanup.current);\n            intentCleanup.current = undefined;\n        }\n    }, [\n        clearTimeout\n    ]);\n    const cancelSwipeResetCleanup = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        if (resetCleanup.current) {\n            clearTimeout(resetCleanup.current);\n            resetCleanup.current = undefined;\n        }\n    }, [\n        clearTimeout\n    ]);\n    const handleCleanup = useEventCallback(()=>{\n        if (swipeState !== SwipeState.SWIPE) {\n            offset.current = 0;\n            startTime.current = 0;\n            cancelSwipeIntentCleanup();\n            cancelSwipeResetCleanup();\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(handleCleanup, [\n        swipeState,\n        handleCleanup\n    ]);\n    const handleCancelSwipe = useEventCallback((currentSwipeOffset)=>{\n        resetCleanup.current = undefined;\n        if (offset.current === currentSwipeOffset) {\n            onSwipeCancel(offset.current);\n        }\n    });\n    const onWheel = useEventCallback((event)=>{\n        if (event.ctrlKey) {\n            return;\n        }\n        if (Math.abs(event.deltaY) > Math.abs(event.deltaX)) {\n            return;\n        }\n        if (swipeState === SwipeState.NONE) {\n            if (Math.abs(event.deltaX) <= 1.2 * Math.abs(wheelResidualMomentum.current)) {\n                wheelResidualMomentum.current = event.deltaX;\n                return;\n            }\n            if (!isSwipeValid(-event.deltaX)) {\n                return;\n            }\n            intent.current += event.deltaX;\n            cancelSwipeIntentCleanup();\n            if (Math.abs(intent.current) > 30) {\n                intent.current = 0;\n                wheelResidualMomentum.current = 0;\n                startTime.current = Date.now();\n                onSwipeStart();\n            } else {\n                const currentSwipeIntent = intent.current;\n                intentCleanup.current = setTimeout(()=>{\n                    intentCleanup.current = undefined;\n                    if (currentSwipeIntent === intent.current) {\n                        intent.current = 0;\n                    }\n                }, swipeAnimationDuration);\n            }\n        } else if (swipeState === SwipeState.SWIPE) {\n            let newSwipeOffset = offset.current - event.deltaX;\n            newSwipeOffset = Math.min(Math.abs(newSwipeOffset), containerWidth) * Math.sign(newSwipeOffset);\n            offset.current = newSwipeOffset;\n            onSwipeProgress(newSwipeOffset);\n            cancelSwipeResetCleanup();\n            if (Math.abs(newSwipeOffset) > 0.2 * containerWidth) {\n                wheelResidualMomentum.current = event.deltaX;\n                onSwipeFinish(newSwipeOffset, Date.now() - startTime.current);\n                return;\n            }\n            resetCleanup.current = setTimeout(()=>handleCancelSwipe(newSwipeOffset), 2 * swipeAnimationDuration);\n        } else {\n            wheelResidualMomentum.current = event.deltaX;\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_WHEEL, onWheel), [\n        subscribeSensors,\n        onWheel\n    ]);\n}\nconst cssContainerPrefix = makeComposePrefix(\"container\");\nconst ControllerContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useController = makeUseContext(\"useController\", \"ControllerContext\", ControllerContext);\nfunction Controller({ children, ...props }) {\n    var _a;\n    const { carousel, animation, controller, on, styles, render } = props;\n    const [toolbarWidth, setToolbarWidth] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const state = useLightboxState();\n    const dispatch = useLightboxDispatch();\n    const [swipeState, setSwipeState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(SwipeState.NONE);\n    const swipeOffset = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const pullDownOffset = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const pullDownOpacity = react__WEBPACK_IMPORTED_MODULE_0__.useRef(1);\n    const { registerSensors, subscribeSensors } = useSensors();\n    const { subscribe, publish } = useEvents();\n    const cleanupAnimationIncrement = useDelay();\n    const cleanupSwipeOffset = useDelay();\n    const cleanupPullDownOffset = useDelay();\n    const { containerRef, setContainerRef, containerRect } = useContainerRect();\n    const handleContainerRef = useForkRef(usePreventSwipeNavigation(), setContainerRef);\n    const carouselRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const setCarouselRef = useForkRef(carouselRef, undefined);\n    const isRTL = useRTL();\n    const rtl = (value)=>(isRTL ? -1 : 1) * (typeof value === \"number\" ? value : 1);\n    const focus = useEventCallback(()=>{\n        var _a;\n        return (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    });\n    const getLightboxProps = useEventCallback(()=>props);\n    const getLightboxState = useEventCallback(()=>state);\n    const prev = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((params)=>publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV, params), [\n        publish\n    ]);\n    const next = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((params)=>publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT, params), [\n        publish\n    ]);\n    const close = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE), [\n        publish\n    ]);\n    const isSwipeValid = (offset)=>!(carousel.finite && (rtl(offset) > 0 && state.currentIndex === 0 || rtl(offset) < 0 && state.currentIndex === state.slides.length - 1));\n    const setSwipeOffset = (offset)=>{\n        var _a;\n        swipeOffset.current = offset;\n        (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.style.setProperty(cssVar(\"swipe_offset\"), `${Math.round(offset)}px`);\n    };\n    const { closeOnPullDown } = controller;\n    const setPullDownOffset = (offset)=>{\n        var _a, _b;\n        pullDownOffset.current = offset;\n        pullDownOpacity.current = (()=>{\n            const threshold = 60;\n            const minOpacity = 0.5;\n            return Math.min(Math.max(round(1 - offset / threshold * (1 - minOpacity), 2), minOpacity), 1);\n        })();\n        (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.style.setProperty(cssVar(\"pull_down_offset\"), `${Math.round(offset)}px`);\n        (_b = containerRef.current) === null || _b === void 0 ? void 0 : _b.style.setProperty(cssVar(\"pull_down_opacity\"), `${pullDownOpacity.current}`);\n    };\n    const { prepareAnimation: preparePullDownAnimation } = useAnimation(carouselRef, (snapshot, rect, translate)=>{\n        if (carouselRef.current && containerRect) {\n            return {\n                keyframes: [\n                    {\n                        transform: `translate(0, ${snapshot.rect.y - rect.y + translate.y}px)`,\n                        opacity: snapshot.opacity\n                    },\n                    {\n                        transform: \"translate(0, 0)\",\n                        opacity: 1\n                    }\n                ],\n                duration: snapshot.duration,\n                easing: animation.easing.fade\n            };\n        }\n        return undefined;\n    });\n    const pullDown = (offset, cancel)=>{\n        if (closeOnPullDown) {\n            setPullDownOffset(offset);\n            let duration = 0;\n            if (carouselRef.current) {\n                duration = animation.fade * (cancel ? 2 : 1);\n                preparePullDownAnimation({\n                    rect: carouselRef.current.getBoundingClientRect(),\n                    opacity: pullDownOpacity.current,\n                    duration\n                });\n            }\n            cleanupPullDownOffset(()=>{\n                setPullDownOffset(0);\n                setSwipeState(SwipeState.NONE);\n            }, duration);\n            setSwipeState(SwipeState.ANIMATION);\n            if (!cancel) {\n                close();\n            }\n        }\n    };\n    const { prepareAnimation, isAnimationPlaying } = useAnimation(carouselRef, (snapshot, rect, translate)=>{\n        var _a;\n        if (carouselRef.current && containerRect && ((_a = state.animation) === null || _a === void 0 ? void 0 : _a.duration)) {\n            const parsedSpacing = parseLengthPercentage(carousel.spacing);\n            const spacingValue = (parsedSpacing.percent ? parsedSpacing.percent * containerRect.width / 100 : parsedSpacing.pixel) || 0;\n            return {\n                keyframes: [\n                    {\n                        transform: `translate(${rtl(state.globalIndex - snapshot.index) * (containerRect.width + spacingValue) + snapshot.rect.x - rect.x + translate.x}px, 0)`\n                    },\n                    {\n                        transform: \"translate(0, 0)\"\n                    }\n                ],\n                duration: state.animation.duration,\n                easing: state.animation.easing\n            };\n        }\n        return undefined;\n    });\n    const swipe = useEventCallback((action)=>{\n        var _a, _b;\n        const currentSwipeOffset = action.offset || 0;\n        const swipeDuration = !currentSwipeOffset ? (_a = animation.navigation) !== null && _a !== void 0 ? _a : animation.swipe : animation.swipe;\n        const swipeEasing = !currentSwipeOffset && !isAnimationPlaying() ? animation.easing.navigation : animation.easing.swipe;\n        let { direction } = action;\n        const count = (_b = action.count) !== null && _b !== void 0 ? _b : 1;\n        let newSwipeState = SwipeState.ANIMATION;\n        let newSwipeAnimationDuration = swipeDuration * count;\n        if (!direction) {\n            const containerWidth = containerRect === null || containerRect === void 0 ? void 0 : containerRect.width;\n            const elapsedTime = action.duration || 0;\n            const expectedTime = containerWidth ? swipeDuration / containerWidth * Math.abs(currentSwipeOffset) : swipeDuration;\n            if (count !== 0) {\n                if (elapsedTime < expectedTime) {\n                    newSwipeAnimationDuration = newSwipeAnimationDuration / expectedTime * Math.max(elapsedTime, expectedTime / 5);\n                } else if (containerWidth) {\n                    newSwipeAnimationDuration = swipeDuration / containerWidth * (containerWidth - Math.abs(currentSwipeOffset));\n                }\n                direction = rtl(currentSwipeOffset) > 0 ? _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV : _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT;\n            } else {\n                newSwipeAnimationDuration = swipeDuration / 2;\n            }\n        }\n        let increment = 0;\n        if (direction === _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV) {\n            if (isSwipeValid(rtl(1))) {\n                increment = -count;\n            } else {\n                newSwipeState = SwipeState.NONE;\n                newSwipeAnimationDuration = swipeDuration;\n            }\n        } else if (direction === _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT) {\n            if (isSwipeValid(rtl(-1))) {\n                increment = count;\n            } else {\n                newSwipeState = SwipeState.NONE;\n                newSwipeAnimationDuration = swipeDuration;\n            }\n        }\n        newSwipeAnimationDuration = Math.round(newSwipeAnimationDuration);\n        cleanupSwipeOffset(()=>{\n            setSwipeOffset(0);\n            setSwipeState(SwipeState.NONE);\n        }, newSwipeAnimationDuration);\n        if (carouselRef.current) {\n            prepareAnimation({\n                rect: carouselRef.current.getBoundingClientRect(),\n                index: state.globalIndex\n            });\n        }\n        setSwipeState(newSwipeState);\n        publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_SWIPE, {\n            type: \"swipe\",\n            increment,\n            duration: newSwipeAnimationDuration,\n            easing: swipeEasing\n        });\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        var _a, _b;\n        if (((_a = state.animation) === null || _a === void 0 ? void 0 : _a.increment) && ((_b = state.animation) === null || _b === void 0 ? void 0 : _b.duration)) {\n            cleanupAnimationIncrement(()=>dispatch({\n                    type: \"swipe\",\n                    increment: 0\n                }), state.animation.duration);\n        }\n    }, [\n        state.animation,\n        dispatch,\n        cleanupAnimationIncrement\n    ]);\n    const swipeParams = [\n        subscribeSensors,\n        isSwipeValid,\n        (containerRect === null || containerRect === void 0 ? void 0 : containerRect.width) || 0,\n        animation.swipe,\n        ()=>setSwipeState(SwipeState.SWIPE),\n        (offset)=>setSwipeOffset(offset),\n        (offset, duration)=>swipe({\n                offset,\n                duration,\n                count: 1\n            }),\n        (offset)=>swipe({\n                offset,\n                count: 0\n            })\n    ];\n    const pullDownParams = [\n        ()=>{\n            if (closeOnPullDown) {\n                setSwipeState(SwipeState.PULL_DOWN);\n            }\n        },\n        (offset)=>setPullDownOffset(offset),\n        (offset)=>pullDown(offset),\n        (offset)=>pullDown(offset, true)\n    ];\n    usePointerSwipe(...swipeParams, closeOnPullDown, ...pullDownParams);\n    useWheelSwipe(swipeState, ...swipeParams);\n    const focusOnMount = useEventCallback(()=>{\n        if (controller.focus) {\n            if (document.querySelector(`.${cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_PORTAL)} .${cssClass(cssContainerPrefix())}`)) {\n                focus();\n            }\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(focusOnMount, [\n        focusOnMount\n    ]);\n    const onViewCallback = useEventCallback(()=>{\n        var _a;\n        (_a = on.view) === null || _a === void 0 ? void 0 : _a.call(on, {\n            index: state.currentIndex\n        });\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(onViewCallback, [\n        state.globalIndex,\n        onViewCallback\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>cleanup(subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV, (action)=>swipe({\n                direction: _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV,\n                ...action\n            })), subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT, (action)=>swipe({\n                direction: _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT,\n                ...action\n            })), subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_SWIPE, (action)=>dispatch(action))), [\n        subscribe,\n        swipe,\n        dispatch\n    ]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            prev,\n            next,\n            close,\n            focus,\n            slideRect: containerRect ? computeSlideRect(containerRect, carousel.padding) : {\n                width: 0,\n                height: 0\n            },\n            containerRect: containerRect || {\n                width: 0,\n                height: 0\n            },\n            subscribeSensors,\n            containerRef,\n            setCarouselRef,\n            toolbarWidth,\n            setToolbarWidth\n        }), [\n        prev,\n        next,\n        close,\n        focus,\n        subscribeSensors,\n        containerRect,\n        containerRef,\n        setCarouselRef,\n        toolbarWidth,\n        setToolbarWidth,\n        carousel.padding\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(controller.ref, ()=>({\n            prev,\n            next,\n            close,\n            focus,\n            getLightboxProps,\n            getLightboxState\n        }), [\n        prev,\n        next,\n        close,\n        focus,\n        getLightboxProps,\n        getLightboxState\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: handleContainerRef,\n        className: clsx(cssClass(cssContainerPrefix()), cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER)),\n        style: {\n            ...swipeState === SwipeState.SWIPE ? {\n                [cssVar(\"swipe_offset\")]: `${Math.round(swipeOffset.current)}px`\n            } : null,\n            ...swipeState === SwipeState.PULL_DOWN ? {\n                [cssVar(\"pull_down_offset\")]: `${Math.round(pullDownOffset.current)}px`,\n                [cssVar(\"pull_down_opacity\")]: `${pullDownOpacity.current}`\n            } : null,\n            ...controller.touchAction !== \"none\" ? {\n                [cssVar(\"controller_touch_action\")]: controller.touchAction\n            } : null,\n            ...styles.container\n        },\n        ...controller.aria ? {\n            role: \"presentation\",\n            \"aria-live\": \"polite\"\n        } : null,\n        tabIndex: -1,\n        ...registerSensors\n    }, containerRect && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ControllerContext.Provider, {\n        value: context\n    }, children, (_a = render.controls) === null || _a === void 0 ? void 0 : _a.call(render)));\n}\nconst ControllerModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CONTROLLER, Controller);\nfunction cssPrefix$2(value) {\n    return composePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CAROUSEL, value);\n}\nfunction cssSlidePrefix(value) {\n    return composePrefix(\"slide\", value);\n}\nfunction CarouselSlide({ slide, offset }) {\n    const containerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const { currentIndex } = useLightboxState();\n    const { slideRect, close } = useController();\n    const { render, carousel: { imageFit, imageProps }, on: { click: onClick }, controller: { closeOnBackdropClick }, styles: { slide: style } } = useLightboxProps();\n    const renderSlide = ()=>{\n        var _a, _b, _c, _d;\n        let rendered = (_a = render.slide) === null || _a === void 0 ? void 0 : _a.call(render, {\n            slide,\n            offset,\n            rect: slideRect\n        });\n        if (!rendered && isImageSlide(slide)) {\n            rendered = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ImageSlide, {\n                slide: slide,\n                offset: offset,\n                render: render,\n                rect: slideRect,\n                imageFit: imageFit,\n                imageProps: imageProps,\n                onClick: offset === 0 ? ()=>onClick === null || onClick === void 0 ? void 0 : onClick({\n                        index: currentIndex\n                    }) : undefined\n            });\n        }\n        return rendered ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (_b = render.slideHeader) === null || _b === void 0 ? void 0 : _b.call(render, {\n            slide\n        }), ((_c = render.slideContainer) !== null && _c !== void 0 ? _c : ({ children })=>children)({\n            slide,\n            children: rendered\n        }), (_d = render.slideFooter) === null || _d === void 0 ? void 0 : _d.call(render, {\n            slide\n        })) : null;\n    };\n    const handleBackdropClick = (event)=>{\n        const container = containerRef.current;\n        const target = event.target instanceof HTMLElement ? event.target : undefined;\n        if (closeOnBackdropClick && target && container && (target === container || Array.from(container.children).find((x)=>x === target) && target.classList.contains(cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_SLIDE_WRAPPER)))) {\n            close();\n        }\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: containerRef,\n        className: clsx(cssClass(cssSlidePrefix()), offset === 0 && cssClass(cssSlidePrefix(\"current\")), cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER)),\n        onClick: handleBackdropClick,\n        style: style\n    }, renderSlide());\n}\nfunction Placeholder() {\n    const style = useLightboxProps().styles.slide;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: cssClass(\"slide\"),\n        style: style\n    });\n}\nfunction Carousel({ carousel }) {\n    const { slides, currentIndex, globalIndex } = useLightboxState();\n    const { setCarouselRef } = useController();\n    const spacingValue = parseLengthPercentage(carousel.spacing);\n    const paddingValue = parseLengthPercentage(carousel.padding);\n    const items = [];\n    const preload = calculatePreload(carousel, slides, 1);\n    if (hasSlides(slides)) {\n        for(let i = currentIndex - preload; i < currentIndex; i += 1){\n            const key = globalIndex + i - currentIndex;\n            items.push(!carousel.finite || i >= 0 ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CarouselSlide, {\n                key: key,\n                slide: slides[(i + preload * slides.length) % slides.length],\n                offset: i - currentIndex\n            }) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Placeholder, {\n                key: key\n            }));\n        }\n        items.push(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CarouselSlide, {\n            key: globalIndex,\n            slide: slides[currentIndex],\n            offset: 0\n        }));\n        for(let i = currentIndex + 1; i <= currentIndex + preload; i += 1){\n            const key = globalIndex + i - currentIndex;\n            items.push(!carousel.finite || i <= slides.length - 1 ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CarouselSlide, {\n                key: key,\n                slide: slides[i % slides.length],\n                offset: i - currentIndex\n            }) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Placeholder, {\n                key: key\n            }));\n        }\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: setCarouselRef,\n        className: clsx(cssClass(cssPrefix$2()), items.length > 0 && cssClass(cssPrefix$2(\"with_slides\"))),\n        style: {\n            [`${cssVar(cssPrefix$2(\"slides_count\"))}`]: items.length,\n            [`${cssVar(cssPrefix$2(\"spacing_px\"))}`]: spacingValue.pixel || 0,\n            [`${cssVar(cssPrefix$2(\"spacing_percent\"))}`]: spacingValue.percent || 0,\n            [`${cssVar(cssPrefix$2(\"padding_px\"))}`]: paddingValue.pixel || 0,\n            [`${cssVar(cssPrefix$2(\"padding_percent\"))}`]: paddingValue.percent || 0\n        }\n    }, items);\n}\nconst CarouselModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CAROUSEL, Carousel);\nfunction useNavigationState() {\n    const { carousel } = useLightboxProps();\n    const { slides, currentIndex } = useLightboxState();\n    const prevDisabled = slides.length === 0 || carousel.finite && currentIndex === 0;\n    const nextDisabled = slides.length === 0 || carousel.finite && currentIndex === slides.length - 1;\n    return {\n        prevDisabled,\n        nextDisabled\n    };\n}\nfunction useKeyboardNavigation(subscribeSensors) {\n    var _a;\n    const isRTL = useRTL();\n    const { publish } = useEvents();\n    const { animation } = useLightboxProps();\n    const { prevDisabled, nextDisabled } = useNavigationState();\n    const throttle = ((_a = animation.navigation) !== null && _a !== void 0 ? _a : animation.swipe) / 2;\n    const prev = useThrottle(()=>publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV), throttle);\n    const next = useThrottle(()=>publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT), throttle);\n    const handleKeyDown = useEventCallback((event)=>{\n        switch(event.key){\n            case _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ESCAPE:\n                publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE);\n                break;\n            case _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ARROW_LEFT:\n                if (!(isRTL ? nextDisabled : prevDisabled)) (isRTL ? next : prev)();\n                break;\n            case _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ARROW_RIGHT:\n                if (!(isRTL ? prevDisabled : nextDisabled)) (isRTL ? prev : next)();\n                break;\n            default:\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_DOWN, handleKeyDown), [\n        subscribeSensors,\n        handleKeyDown\n    ]);\n}\nfunction NavigationButton({ label, icon, renderIcon, action, onClick, disabled, style }) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(IconButton, {\n        label: label,\n        icon: icon,\n        renderIcon: renderIcon,\n        className: cssClass(`navigation_${action}`),\n        disabled: disabled,\n        onClick: onClick,\n        style: style,\n        ...useLoseFocus(useController().focus, disabled)\n    });\n}\nfunction Navigation({ render: { buttonPrev, buttonNext, iconPrev, iconNext }, styles }) {\n    const { prev, next, subscribeSensors } = useController();\n    const { prevDisabled, nextDisabled } = useNavigationState();\n    useKeyboardNavigation(subscribeSensors);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, buttonPrev ? buttonPrev() : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NavigationButton, {\n        label: \"Previous\",\n        action: _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV,\n        icon: PreviousIcon,\n        renderIcon: iconPrev,\n        style: styles.navigationPrev,\n        disabled: prevDisabled,\n        onClick: prev\n    }), buttonNext ? buttonNext() : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NavigationButton, {\n        label: \"Next\",\n        action: _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT,\n        icon: NextIcon,\n        renderIcon: iconNext,\n        style: styles.navigationNext,\n        disabled: nextDisabled,\n        onClick: next\n    }));\n}\nconst NavigationModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_NAVIGATION, Navigation);\nconst noScroll = cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_NO_SCROLL);\nconst noScrollPadding = cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_NO_SCROLL_PADDING);\nfunction isHTMLElement(element) {\n    return \"style\" in element;\n}\nfunction padScrollbar(element, padding, rtl) {\n    const styles = window.getComputedStyle(element);\n    const property = rtl ? \"padding-left\" : \"padding-right\";\n    const computedValue = rtl ? styles.paddingLeft : styles.paddingRight;\n    const originalValue = element.style.getPropertyValue(property);\n    element.style.setProperty(property, `${(parseInt(computedValue) || 0) + padding}px`);\n    return ()=>{\n        if (originalValue) {\n            element.style.setProperty(property, originalValue);\n        } else {\n            element.style.removeProperty(property);\n        }\n    };\n}\nfunction NoScroll({ noScroll: { disabled }, children }) {\n    const rtl = useRTL();\n    useLayoutEffect(()=>{\n        if (disabled) return ()=>{};\n        const cleanup = [];\n        const { body, documentElement } = document;\n        const scrollbar = Math.round(window.innerWidth - documentElement.clientWidth);\n        if (scrollbar > 0) {\n            cleanup.push(padScrollbar(body, scrollbar, rtl));\n            const elements = body.getElementsByTagName(\"*\");\n            for(let i = 0; i < elements.length; i += 1){\n                const element = elements[i];\n                if (isHTMLElement(element) && window.getComputedStyle(element).getPropertyValue(\"position\") === \"fixed\" && !element.classList.contains(noScrollPadding)) {\n                    cleanup.push(padScrollbar(element, scrollbar, rtl));\n                }\n            }\n        }\n        body.classList.add(noScroll);\n        return ()=>{\n            body.classList.remove(noScroll);\n            cleanup.forEach((clean)=>clean());\n        };\n    }, [\n        rtl,\n        disabled\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\nconst NoScrollModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_NO_SCROLL, NoScroll);\nfunction cssPrefix$1(value) {\n    return composePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_PORTAL, value);\n}\nfunction setAttribute(element, attribute, value) {\n    const previousValue = element.getAttribute(attribute);\n    element.setAttribute(attribute, value);\n    return ()=>{\n        if (previousValue) {\n            element.setAttribute(attribute, previousValue);\n        } else {\n            element.removeAttribute(attribute);\n        }\n    };\n}\nfunction Portal({ children, animation, styles, className, on, portal, close }) {\n    const [mounted, setMounted] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const [visible, setVisible] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const cleanup = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);\n    const restoreFocus = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const { setTimeout } = useTimeouts();\n    const { subscribe } = useEvents();\n    const reduceMotion = useMotionPreference();\n    const animationDuration = !reduceMotion ? animation.fade : 0;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        setMounted(true);\n        return ()=>{\n            setMounted(false);\n            setVisible(false);\n        };\n    }, []);\n    const handleCleanup = useEventCallback(()=>{\n        cleanup.current.forEach((clean)=>clean());\n        cleanup.current = [];\n    });\n    const handleClose = useEventCallback(()=>{\n        var _a;\n        setVisible(false);\n        handleCleanup();\n        (_a = on.exiting) === null || _a === void 0 ? void 0 : _a.call(on);\n        setTimeout(()=>{\n            var _a;\n            (_a = on.exited) === null || _a === void 0 ? void 0 : _a.call(on);\n            close();\n        }, animationDuration);\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE, handleClose), [\n        subscribe,\n        handleClose\n    ]);\n    const handleEnter = useEventCallback((node)=>{\n        var _a, _b, _c;\n        node.scrollTop;\n        setVisible(true);\n        (_a = on.entering) === null || _a === void 0 ? void 0 : _a.call(on);\n        const elements = (_c = (_b = node.parentNode) === null || _b === void 0 ? void 0 : _b.children) !== null && _c !== void 0 ? _c : [];\n        for(let i = 0; i < elements.length; i += 1){\n            const element = elements[i];\n            if ([\n                \"TEMPLATE\",\n                \"SCRIPT\",\n                \"STYLE\"\n            ].indexOf(element.tagName) === -1 && element !== node) {\n                cleanup.current.push(setAttribute(element, \"inert\", \"true\"));\n                cleanup.current.push(setAttribute(element, \"aria-hidden\", \"true\"));\n            }\n        }\n        cleanup.current.push(()=>{\n            var _a, _b;\n            (_b = (_a = restoreFocus.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n        });\n        setTimeout(()=>{\n            var _a;\n            (_a = on.entered) === null || _a === void 0 ? void 0 : _a.call(on);\n        }, animationDuration);\n    });\n    const handleRef = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((node)=>{\n        if (node) {\n            handleEnter(node);\n        } else {\n            handleCleanup();\n        }\n    }, [\n        handleEnter,\n        handleCleanup\n    ]);\n    return mounted ? /*#__PURE__*/ (0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: handleRef,\n        className: clsx(className, cssClass(\"root\"), cssClass(cssPrefix$1()), cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_NO_SCROLL_PADDING), visible && cssClass(cssPrefix$1(\"open\"))),\n        role: \"presentation\",\n        \"aria-live\": \"polite\",\n        style: {\n            ...animation.fade !== LightboxDefaultProps.animation.fade ? {\n                [cssVar(\"fade_animation_duration\")]: `${animationDuration}ms`\n            } : null,\n            ...animation.easing.fade !== LightboxDefaultProps.animation.easing.fade ? {\n                [cssVar(\"fade_animation_timing_function\")]: animation.easing.fade\n            } : null,\n            ...styles.root\n        },\n        onFocus: (event)=>{\n            if (!restoreFocus.current) {\n                restoreFocus.current = event.relatedTarget;\n            }\n        }\n    }, children), portal.root || document.body) : null;\n}\nconst PortalModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_PORTAL, Portal);\nfunction Root({ children }) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\nconst RootModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_ROOT, Root);\nfunction cssPrefix(value) {\n    return composePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_TOOLBAR, value);\n}\nfunction Toolbar({ toolbar: { buttons }, render: { buttonClose, iconClose }, styles }) {\n    const { close, setToolbarWidth } = useController();\n    const { setContainerRef, containerRect } = useContainerRect();\n    useLayoutEffect(()=>{\n        setToolbarWidth(containerRect === null || containerRect === void 0 ? void 0 : containerRect.width);\n    }, [\n        setToolbarWidth,\n        containerRect === null || containerRect === void 0 ? void 0 : containerRect.width\n    ]);\n    const renderCloseButton = ()=>{\n        if (buttonClose) return buttonClose();\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(IconButton, {\n            key: _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE,\n            label: \"Close\",\n            icon: CloseIcon,\n            renderIcon: iconClose,\n            onClick: close\n        });\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: setContainerRef,\n        style: styles.toolbar,\n        className: cssClass(cssPrefix())\n    }, buttons === null || buttons === void 0 ? void 0 : buttons.map((button)=>button === _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE ? renderCloseButton() : button));\n}\nconst ToolbarModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_TOOLBAR, Toolbar);\nfunction renderNode(node, props) {\n    var _a;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(node.module.component, {\n        key: node.module.name,\n        ...props\n    }, (_a = node.children) === null || _a === void 0 ? void 0 : _a.map((child)=>renderNode(child, props)));\n}\nfunction mergeAnimation(defaultAnimation, animation = {}) {\n    const { easing: defaultAnimationEasing, ...restDefaultAnimation } = defaultAnimation;\n    const { easing, ...restAnimation } = animation;\n    return {\n        easing: {\n            ...defaultAnimationEasing,\n            ...easing\n        },\n        ...restDefaultAnimation,\n        ...restAnimation\n    };\n}\nfunction Lightbox({ carousel, animation, render, toolbar, controller, noScroll, on, plugins, slides, index, ...restProps }) {\n    const { animation: defaultAnimation, carousel: defaultCarousel, render: defaultRender, toolbar: defaultToolbar, controller: defaultController, noScroll: defaultNoScroll, on: defaultOn, slides: defaultSlides, index: defaultIndex, plugins: defaultPlugins, ...restDefaultProps } = LightboxDefaultProps;\n    const { config, augmentation } = withPlugins([\n        createNode(PortalModule, [\n            createNode(NoScrollModule, [\n                createNode(ControllerModule, [\n                    createNode(CarouselModule),\n                    createNode(ToolbarModule),\n                    createNode(NavigationModule)\n                ])\n            ])\n        ])\n    ], plugins || defaultPlugins);\n    const props = augmentation({\n        animation: mergeAnimation(defaultAnimation, animation),\n        carousel: {\n            ...defaultCarousel,\n            ...carousel\n        },\n        render: {\n            ...defaultRender,\n            ...render\n        },\n        toolbar: {\n            ...defaultToolbar,\n            ...toolbar\n        },\n        controller: {\n            ...defaultController,\n            ...controller\n        },\n        noScroll: {\n            ...defaultNoScroll,\n            ...noScroll\n        },\n        on: {\n            ...defaultOn,\n            ...on\n        },\n        ...restDefaultProps,\n        ...restProps\n    });\n    if (!props.open) return null;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxPropsProvider, {\n        ...props\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxStateProvider, {\n        slides: slides || defaultSlides,\n        index: parseInt(index || defaultIndex)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TimeoutsProvider, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(EventsProvider, null, renderNode(createNode(RootModule, config), props)))));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js":
/*!***************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/types.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION_CLOSE: () => (/* binding */ ACTION_CLOSE),\n/* harmony export */   ACTION_NEXT: () => (/* binding */ ACTION_NEXT),\n/* harmony export */   ACTION_PREV: () => (/* binding */ ACTION_PREV),\n/* harmony export */   ACTION_SWIPE: () => (/* binding */ ACTION_SWIPE),\n/* harmony export */   ACTIVE_SLIDE_COMPLETE: () => (/* binding */ ACTIVE_SLIDE_COMPLETE),\n/* harmony export */   ACTIVE_SLIDE_ERROR: () => (/* binding */ ACTIVE_SLIDE_ERROR),\n/* harmony export */   ACTIVE_SLIDE_LOADING: () => (/* binding */ ACTIVE_SLIDE_LOADING),\n/* harmony export */   ACTIVE_SLIDE_PLAYING: () => (/* binding */ ACTIVE_SLIDE_PLAYING),\n/* harmony export */   CLASS_FLEX_CENTER: () => (/* binding */ CLASS_FLEX_CENTER),\n/* harmony export */   CLASS_FULLSIZE: () => (/* binding */ CLASS_FULLSIZE),\n/* harmony export */   CLASS_NO_SCROLL: () => (/* binding */ CLASS_NO_SCROLL),\n/* harmony export */   CLASS_NO_SCROLL_PADDING: () => (/* binding */ CLASS_NO_SCROLL_PADDING),\n/* harmony export */   CLASS_SLIDE_WRAPPER: () => (/* binding */ CLASS_SLIDE_WRAPPER),\n/* harmony export */   ELEMENT_BUTTON: () => (/* binding */ ELEMENT_BUTTON),\n/* harmony export */   ELEMENT_ICON: () => (/* binding */ ELEMENT_ICON),\n/* harmony export */   EVENT_ON_KEY_DOWN: () => (/* binding */ EVENT_ON_KEY_DOWN),\n/* harmony export */   EVENT_ON_KEY_UP: () => (/* binding */ EVENT_ON_KEY_UP),\n/* harmony export */   EVENT_ON_POINTER_CANCEL: () => (/* binding */ EVENT_ON_POINTER_CANCEL),\n/* harmony export */   EVENT_ON_POINTER_DOWN: () => (/* binding */ EVENT_ON_POINTER_DOWN),\n/* harmony export */   EVENT_ON_POINTER_LEAVE: () => (/* binding */ EVENT_ON_POINTER_LEAVE),\n/* harmony export */   EVENT_ON_POINTER_MOVE: () => (/* binding */ EVENT_ON_POINTER_MOVE),\n/* harmony export */   EVENT_ON_POINTER_UP: () => (/* binding */ EVENT_ON_POINTER_UP),\n/* harmony export */   EVENT_ON_WHEEL: () => (/* binding */ EVENT_ON_WHEEL),\n/* harmony export */   IMAGE_FIT_CONTAIN: () => (/* binding */ IMAGE_FIT_CONTAIN),\n/* harmony export */   IMAGE_FIT_COVER: () => (/* binding */ IMAGE_FIT_COVER),\n/* harmony export */   MODULE_CAROUSEL: () => (/* binding */ MODULE_CAROUSEL),\n/* harmony export */   MODULE_CONTROLLER: () => (/* binding */ MODULE_CONTROLLER),\n/* harmony export */   MODULE_NAVIGATION: () => (/* binding */ MODULE_NAVIGATION),\n/* harmony export */   MODULE_NO_SCROLL: () => (/* binding */ MODULE_NO_SCROLL),\n/* harmony export */   MODULE_PORTAL: () => (/* binding */ MODULE_PORTAL),\n/* harmony export */   MODULE_ROOT: () => (/* binding */ MODULE_ROOT),\n/* harmony export */   MODULE_TOOLBAR: () => (/* binding */ MODULE_TOOLBAR),\n/* harmony export */   PLUGIN_CAPTIONS: () => (/* binding */ PLUGIN_CAPTIONS),\n/* harmony export */   PLUGIN_COUNTER: () => (/* binding */ PLUGIN_COUNTER),\n/* harmony export */   PLUGIN_DOWNLOAD: () => (/* binding */ PLUGIN_DOWNLOAD),\n/* harmony export */   PLUGIN_FULLSCREEN: () => (/* binding */ PLUGIN_FULLSCREEN),\n/* harmony export */   PLUGIN_INLINE: () => (/* binding */ PLUGIN_INLINE),\n/* harmony export */   PLUGIN_SHARE: () => (/* binding */ PLUGIN_SHARE),\n/* harmony export */   PLUGIN_SLIDESHOW: () => (/* binding */ PLUGIN_SLIDESHOW),\n/* harmony export */   PLUGIN_THUMBNAILS: () => (/* binding */ PLUGIN_THUMBNAILS),\n/* harmony export */   PLUGIN_ZOOM: () => (/* binding */ PLUGIN_ZOOM),\n/* harmony export */   SLIDE_STATUS_COMPLETE: () => (/* binding */ SLIDE_STATUS_COMPLETE),\n/* harmony export */   SLIDE_STATUS_ERROR: () => (/* binding */ SLIDE_STATUS_ERROR),\n/* harmony export */   SLIDE_STATUS_LOADING: () => (/* binding */ SLIDE_STATUS_LOADING),\n/* harmony export */   SLIDE_STATUS_PLACEHOLDER: () => (/* binding */ SLIDE_STATUS_PLACEHOLDER),\n/* harmony export */   SLIDE_STATUS_PLAYING: () => (/* binding */ SLIDE_STATUS_PLAYING),\n/* harmony export */   UNKNOWN_ACTION_TYPE: () => (/* binding */ UNKNOWN_ACTION_TYPE),\n/* harmony export */   VK_ARROW_LEFT: () => (/* binding */ VK_ARROW_LEFT),\n/* harmony export */   VK_ARROW_RIGHT: () => (/* binding */ VK_ARROW_RIGHT),\n/* harmony export */   VK_ESCAPE: () => (/* binding */ VK_ESCAPE),\n/* harmony export */   activeSlideStatus: () => (/* binding */ activeSlideStatus)\n/* harmony export */ });\nconst MODULE_CAROUSEL = \"carousel\";\nconst MODULE_CONTROLLER = \"controller\";\nconst MODULE_NAVIGATION = \"navigation\";\nconst MODULE_NO_SCROLL = \"no-scroll\";\nconst MODULE_PORTAL = \"portal\";\nconst MODULE_ROOT = \"root\";\nconst MODULE_TOOLBAR = \"toolbar\";\nconst PLUGIN_CAPTIONS = \"captions\";\nconst PLUGIN_COUNTER = \"counter\";\nconst PLUGIN_DOWNLOAD = \"download\";\nconst PLUGIN_FULLSCREEN = \"fullscreen\";\nconst PLUGIN_INLINE = \"inline\";\nconst PLUGIN_SHARE = \"share\";\nconst PLUGIN_SLIDESHOW = \"slideshow\";\nconst PLUGIN_THUMBNAILS = \"thumbnails\";\nconst PLUGIN_ZOOM = \"zoom\";\nconst SLIDE_STATUS_LOADING = \"loading\";\nconst SLIDE_STATUS_PLAYING = \"playing\";\nconst SLIDE_STATUS_ERROR = \"error\";\nconst SLIDE_STATUS_COMPLETE = \"complete\";\nconst SLIDE_STATUS_PLACEHOLDER = \"placeholder\";\nconst activeSlideStatus = (status)=>`active-slide-${status}`;\nconst ACTIVE_SLIDE_LOADING = activeSlideStatus(SLIDE_STATUS_LOADING);\nconst ACTIVE_SLIDE_PLAYING = activeSlideStatus(SLIDE_STATUS_PLAYING);\nconst ACTIVE_SLIDE_ERROR = activeSlideStatus(SLIDE_STATUS_ERROR);\nconst ACTIVE_SLIDE_COMPLETE = activeSlideStatus(SLIDE_STATUS_COMPLETE);\nconst CLASS_FULLSIZE = \"fullsize\";\nconst CLASS_FLEX_CENTER = \"flex_center\";\nconst CLASS_NO_SCROLL = \"no_scroll\";\nconst CLASS_NO_SCROLL_PADDING = \"no_scroll_padding\";\nconst CLASS_SLIDE_WRAPPER = \"slide_wrapper\";\nconst ACTION_PREV = \"prev\";\nconst ACTION_NEXT = \"next\";\nconst ACTION_SWIPE = \"swipe\";\nconst ACTION_CLOSE = \"close\";\nconst EVENT_ON_POINTER_DOWN = \"onPointerDown\";\nconst EVENT_ON_POINTER_MOVE = \"onPointerMove\";\nconst EVENT_ON_POINTER_UP = \"onPointerUp\";\nconst EVENT_ON_POINTER_LEAVE = \"onPointerLeave\";\nconst EVENT_ON_POINTER_CANCEL = \"onPointerCancel\";\nconst EVENT_ON_KEY_DOWN = \"onKeyDown\";\nconst EVENT_ON_KEY_UP = \"onKeyUp\";\nconst EVENT_ON_WHEEL = \"onWheel\";\nconst VK_ESCAPE = \"Escape\";\nconst VK_ARROW_LEFT = \"ArrowLeft\";\nconst VK_ARROW_RIGHT = \"ArrowRight\";\nconst ELEMENT_BUTTON = \"button\";\nconst ELEMENT_ICON = \"icon\";\nconst IMAGE_FIT_CONTAIN = \"contain\";\nconst IMAGE_FIT_COVER = \"cover\";\nconst UNKNOWN_ACTION_TYPE = \"Unknown action type\";\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxNQUFNQSxrQkFBa0I7QUFDeEIsTUFBTUMsb0JBQW9CO0FBQzFCLE1BQU1DLG9CQUFvQjtBQUMxQixNQUFNQyxtQkFBbUI7QUFDekIsTUFBTUMsZ0JBQWdCO0FBQ3RCLE1BQU1DLGNBQWM7QUFDcEIsTUFBTUMsaUJBQWlCO0FBQ3ZCLE1BQU1DLGtCQUFrQjtBQUN4QixNQUFNQyxpQkFBaUI7QUFDdkIsTUFBTUMsa0JBQWtCO0FBQ3hCLE1BQU1DLG9CQUFvQjtBQUMxQixNQUFNQyxnQkFBZ0I7QUFDdEIsTUFBTUMsZUFBZTtBQUNyQixNQUFNQyxtQkFBbUI7QUFDekIsTUFBTUMsb0JBQW9CO0FBQzFCLE1BQU1DLGNBQWM7QUFDcEIsTUFBTUMsdUJBQXVCO0FBQzdCLE1BQU1DLHVCQUF1QjtBQUM3QixNQUFNQyxxQkFBcUI7QUFDM0IsTUFBTUMsd0JBQXdCO0FBQzlCLE1BQU1DLDJCQUEyQjtBQUNqQyxNQUFNQyxvQkFBb0IsQ0FBQ0MsU0FBVyxDQUFDLGFBQWEsRUFBRUEsT0FBTyxDQUFDO0FBQzlELE1BQU1DLHVCQUF1QkYsa0JBQWtCTDtBQUMvQyxNQUFNUSx1QkFBdUJILGtCQUFrQko7QUFDL0MsTUFBTVEscUJBQXFCSixrQkFBa0JIO0FBQzdDLE1BQU1RLHdCQUF3Qkwsa0JBQWtCRjtBQUNoRCxNQUFNUSxpQkFBaUI7QUFDdkIsTUFBTUMsb0JBQW9CO0FBQzFCLE1BQU1DLGtCQUFrQjtBQUN4QixNQUFNQywwQkFBMEI7QUFDaEMsTUFBTUMsc0JBQXNCO0FBQzVCLE1BQU1DLGNBQWM7QUFDcEIsTUFBTUMsY0FBYztBQUNwQixNQUFNQyxlQUFlO0FBQ3JCLE1BQU1DLGVBQWU7QUFDckIsTUFBTUMsd0JBQXdCO0FBQzlCLE1BQU1DLHdCQUF3QjtBQUM5QixNQUFNQyxzQkFBc0I7QUFDNUIsTUFBTUMseUJBQXlCO0FBQy9CLE1BQU1DLDBCQUEwQjtBQUNoQyxNQUFNQyxvQkFBb0I7QUFDMUIsTUFBTUMsa0JBQWtCO0FBQ3hCLE1BQU1DLGlCQUFpQjtBQUN2QixNQUFNQyxZQUFZO0FBQ2xCLE1BQU1DLGdCQUFnQjtBQUN0QixNQUFNQyxpQkFBaUI7QUFDdkIsTUFBTUMsaUJBQWlCO0FBQ3ZCLE1BQU1DLGVBQWU7QUFDckIsTUFBTUMsb0JBQW9CO0FBQzFCLE1BQU1DLGtCQUFrQjtBQUN4QixNQUFNQyxzQkFBc0I7QUFFbTVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktcHJvamVjdC8uL25vZGVfbW9kdWxlcy95ZXQtYW5vdGhlci1yZWFjdC1saWdodGJveC9kaXN0L3R5cGVzLmpzP2MyZTciXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTU9EVUxFX0NBUk9VU0VMID0gXCJjYXJvdXNlbFwiO1xuY29uc3QgTU9EVUxFX0NPTlRST0xMRVIgPSBcImNvbnRyb2xsZXJcIjtcbmNvbnN0IE1PRFVMRV9OQVZJR0FUSU9OID0gXCJuYXZpZ2F0aW9uXCI7XG5jb25zdCBNT0RVTEVfTk9fU0NST0xMID0gXCJuby1zY3JvbGxcIjtcbmNvbnN0IE1PRFVMRV9QT1JUQUwgPSBcInBvcnRhbFwiO1xuY29uc3QgTU9EVUxFX1JPT1QgPSBcInJvb3RcIjtcbmNvbnN0IE1PRFVMRV9UT09MQkFSID0gXCJ0b29sYmFyXCI7XG5jb25zdCBQTFVHSU5fQ0FQVElPTlMgPSBcImNhcHRpb25zXCI7XG5jb25zdCBQTFVHSU5fQ09VTlRFUiA9IFwiY291bnRlclwiO1xuY29uc3QgUExVR0lOX0RPV05MT0FEID0gXCJkb3dubG9hZFwiO1xuY29uc3QgUExVR0lOX0ZVTExTQ1JFRU4gPSBcImZ1bGxzY3JlZW5cIjtcbmNvbnN0IFBMVUdJTl9JTkxJTkUgPSBcImlubGluZVwiO1xuY29uc3QgUExVR0lOX1NIQVJFID0gXCJzaGFyZVwiO1xuY29uc3QgUExVR0lOX1NMSURFU0hPVyA9IFwic2xpZGVzaG93XCI7XG5jb25zdCBQTFVHSU5fVEhVTUJOQUlMUyA9IFwidGh1bWJuYWlsc1wiO1xuY29uc3QgUExVR0lOX1pPT00gPSBcInpvb21cIjtcbmNvbnN0IFNMSURFX1NUQVRVU19MT0FESU5HID0gXCJsb2FkaW5nXCI7XG5jb25zdCBTTElERV9TVEFUVVNfUExBWUlORyA9IFwicGxheWluZ1wiO1xuY29uc3QgU0xJREVfU1RBVFVTX0VSUk9SID0gXCJlcnJvclwiO1xuY29uc3QgU0xJREVfU1RBVFVTX0NPTVBMRVRFID0gXCJjb21wbGV0ZVwiO1xuY29uc3QgU0xJREVfU1RBVFVTX1BMQUNFSE9MREVSID0gXCJwbGFjZWhvbGRlclwiO1xuY29uc3QgYWN0aXZlU2xpZGVTdGF0dXMgPSAoc3RhdHVzKSA9PiBgYWN0aXZlLXNsaWRlLSR7c3RhdHVzfWA7XG5jb25zdCBBQ1RJVkVfU0xJREVfTE9BRElORyA9IGFjdGl2ZVNsaWRlU3RhdHVzKFNMSURFX1NUQVRVU19MT0FESU5HKTtcbmNvbnN0IEFDVElWRV9TTElERV9QTEFZSU5HID0gYWN0aXZlU2xpZGVTdGF0dXMoU0xJREVfU1RBVFVTX1BMQVlJTkcpO1xuY29uc3QgQUNUSVZFX1NMSURFX0VSUk9SID0gYWN0aXZlU2xpZGVTdGF0dXMoU0xJREVfU1RBVFVTX0VSUk9SKTtcbmNvbnN0IEFDVElWRV9TTElERV9DT01QTEVURSA9IGFjdGl2ZVNsaWRlU3RhdHVzKFNMSURFX1NUQVRVU19DT01QTEVURSk7XG5jb25zdCBDTEFTU19GVUxMU0laRSA9IFwiZnVsbHNpemVcIjtcbmNvbnN0IENMQVNTX0ZMRVhfQ0VOVEVSID0gXCJmbGV4X2NlbnRlclwiO1xuY29uc3QgQ0xBU1NfTk9fU0NST0xMID0gXCJub19zY3JvbGxcIjtcbmNvbnN0IENMQVNTX05PX1NDUk9MTF9QQURESU5HID0gXCJub19zY3JvbGxfcGFkZGluZ1wiO1xuY29uc3QgQ0xBU1NfU0xJREVfV1JBUFBFUiA9IFwic2xpZGVfd3JhcHBlclwiO1xuY29uc3QgQUNUSU9OX1BSRVYgPSBcInByZXZcIjtcbmNvbnN0IEFDVElPTl9ORVhUID0gXCJuZXh0XCI7XG5jb25zdCBBQ1RJT05fU1dJUEUgPSBcInN3aXBlXCI7XG5jb25zdCBBQ1RJT05fQ0xPU0UgPSBcImNsb3NlXCI7XG5jb25zdCBFVkVOVF9PTl9QT0lOVEVSX0RPV04gPSBcIm9uUG9pbnRlckRvd25cIjtcbmNvbnN0IEVWRU5UX09OX1BPSU5URVJfTU9WRSA9IFwib25Qb2ludGVyTW92ZVwiO1xuY29uc3QgRVZFTlRfT05fUE9JTlRFUl9VUCA9IFwib25Qb2ludGVyVXBcIjtcbmNvbnN0IEVWRU5UX09OX1BPSU5URVJfTEVBVkUgPSBcIm9uUG9pbnRlckxlYXZlXCI7XG5jb25zdCBFVkVOVF9PTl9QT0lOVEVSX0NBTkNFTCA9IFwib25Qb2ludGVyQ2FuY2VsXCI7XG5jb25zdCBFVkVOVF9PTl9LRVlfRE9XTiA9IFwib25LZXlEb3duXCI7XG5jb25zdCBFVkVOVF9PTl9LRVlfVVAgPSBcIm9uS2V5VXBcIjtcbmNvbnN0IEVWRU5UX09OX1dIRUVMID0gXCJvbldoZWVsXCI7XG5jb25zdCBWS19FU0NBUEUgPSBcIkVzY2FwZVwiO1xuY29uc3QgVktfQVJST1dfTEVGVCA9IFwiQXJyb3dMZWZ0XCI7XG5jb25zdCBWS19BUlJPV19SSUdIVCA9IFwiQXJyb3dSaWdodFwiO1xuY29uc3QgRUxFTUVOVF9CVVRUT04gPSBcImJ1dHRvblwiO1xuY29uc3QgRUxFTUVOVF9JQ09OID0gXCJpY29uXCI7XG5jb25zdCBJTUFHRV9GSVRfQ09OVEFJTiA9IFwiY29udGFpblwiO1xuY29uc3QgSU1BR0VfRklUX0NPVkVSID0gXCJjb3ZlclwiO1xuY29uc3QgVU5LTk9XTl9BQ1RJT05fVFlQRSA9IFwiVW5rbm93biBhY3Rpb24gdHlwZVwiO1xuXG5leHBvcnQgeyBBQ1RJT05fQ0xPU0UsIEFDVElPTl9ORVhULCBBQ1RJT05fUFJFViwgQUNUSU9OX1NXSVBFLCBBQ1RJVkVfU0xJREVfQ09NUExFVEUsIEFDVElWRV9TTElERV9FUlJPUiwgQUNUSVZFX1NMSURFX0xPQURJTkcsIEFDVElWRV9TTElERV9QTEFZSU5HLCBDTEFTU19GTEVYX0NFTlRFUiwgQ0xBU1NfRlVMTFNJWkUsIENMQVNTX05PX1NDUk9MTCwgQ0xBU1NfTk9fU0NST0xMX1BBRERJTkcsIENMQVNTX1NMSURFX1dSQVBQRVIsIEVMRU1FTlRfQlVUVE9OLCBFTEVNRU5UX0lDT04sIEVWRU5UX09OX0tFWV9ET1dOLCBFVkVOVF9PTl9LRVlfVVAsIEVWRU5UX09OX1BPSU5URVJfQ0FOQ0VMLCBFVkVOVF9PTl9QT0lOVEVSX0RPV04sIEVWRU5UX09OX1BPSU5URVJfTEVBVkUsIEVWRU5UX09OX1BPSU5URVJfTU9WRSwgRVZFTlRfT05fUE9JTlRFUl9VUCwgRVZFTlRfT05fV0hFRUwsIElNQUdFX0ZJVF9DT05UQUlOLCBJTUFHRV9GSVRfQ09WRVIsIE1PRFVMRV9DQVJPVVNFTCwgTU9EVUxFX0NPTlRST0xMRVIsIE1PRFVMRV9OQVZJR0FUSU9OLCBNT0RVTEVfTk9fU0NST0xMLCBNT0RVTEVfUE9SVEFMLCBNT0RVTEVfUk9PVCwgTU9EVUxFX1RPT0xCQVIsIFBMVUdJTl9DQVBUSU9OUywgUExVR0lOX0NPVU5URVIsIFBMVUdJTl9ET1dOTE9BRCwgUExVR0lOX0ZVTExTQ1JFRU4sIFBMVUdJTl9JTkxJTkUsIFBMVUdJTl9TSEFSRSwgUExVR0lOX1NMSURFU0hPVywgUExVR0lOX1RIVU1CTkFJTFMsIFBMVUdJTl9aT09NLCBTTElERV9TVEFUVVNfQ09NUExFVEUsIFNMSURFX1NUQVRVU19FUlJPUiwgU0xJREVfU1RBVFVTX0xPQURJTkcsIFNMSURFX1NUQVRVU19QTEFDRUhPTERFUiwgU0xJREVfU1RBVFVTX1BMQVlJTkcsIFVOS05PV05fQUNUSU9OX1RZUEUsIFZLX0FSUk9XX0xFRlQsIFZLX0FSUk9XX1JJR0hULCBWS19FU0NBUEUsIGFjdGl2ZVNsaWRlU3RhdHVzIH07XG4iXSwibmFtZXMiOlsiTU9EVUxFX0NBUk9VU0VMIiwiTU9EVUxFX0NPTlRST0xMRVIiLCJNT0RVTEVfTkFWSUdBVElPTiIsIk1PRFVMRV9OT19TQ1JPTEwiLCJNT0RVTEVfUE9SVEFMIiwiTU9EVUxFX1JPT1QiLCJNT0RVTEVfVE9PTEJBUiIsIlBMVUdJTl9DQVBUSU9OUyIsIlBMVUdJTl9DT1VOVEVSIiwiUExVR0lOX0RPV05MT0FEIiwiUExVR0lOX0ZVTExTQ1JFRU4iLCJQTFVHSU5fSU5MSU5FIiwiUExVR0lOX1NIQVJFIiwiUExVR0lOX1NMSURFU0hPVyIsIlBMVUdJTl9USFVNQk5BSUxTIiwiUExVR0lOX1pPT00iLCJTTElERV9TVEFUVVNfTE9BRElORyIsIlNMSURFX1NUQVRVU19QTEFZSU5HIiwiU0xJREVfU1RBVFVTX0VSUk9SIiwiU0xJREVfU1RBVFVTX0NPTVBMRVRFIiwiU0xJREVfU1RBVFVTX1BMQUNFSE9MREVSIiwiYWN0aXZlU2xpZGVTdGF0dXMiLCJzdGF0dXMiLCJBQ1RJVkVfU0xJREVfTE9BRElORyIsIkFDVElWRV9TTElERV9QTEFZSU5HIiwiQUNUSVZFX1NMSURFX0VSUk9SIiwiQUNUSVZFX1NMSURFX0NPTVBMRVRFIiwiQ0xBU1NfRlVMTFNJWkUiLCJDTEFTU19GTEVYX0NFTlRFUiIsIkNMQVNTX05PX1NDUk9MTCIsIkNMQVNTX05PX1NDUk9MTF9QQURESU5HIiwiQ0xBU1NfU0xJREVfV1JBUFBFUiIsIkFDVElPTl9QUkVWIiwiQUNUSU9OX05FWFQiLCJBQ1RJT05fU1dJUEUiLCJBQ1RJT05fQ0xPU0UiLCJFVkVOVF9PTl9QT0lOVEVSX0RPV04iLCJFVkVOVF9PTl9QT0lOVEVSX01PVkUiLCJFVkVOVF9PTl9QT0lOVEVSX1VQIiwiRVZFTlRfT05fUE9JTlRFUl9MRUFWRSIsIkVWRU5UX09OX1BPSU5URVJfQ0FOQ0VMIiwiRVZFTlRfT05fS0VZX0RPV04iLCJFVkVOVF9PTl9LRVlfVVAiLCJFVkVOVF9PTl9XSEVFTCIsIlZLX0VTQ0FQRSIsIlZLX0FSUk9XX0xFRlQiLCJWS19BUlJPV19SSUdIVCIsIkVMRU1FTlRfQlVUVE9OIiwiRUxFTUVOVF9JQ09OIiwiSU1BR0VfRklUX0NPTlRBSU4iLCJJTUFHRV9GSVRfQ09WRVIiLCJVTktOT1dOX0FDVElPTl9UWVBFIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\n");

/***/ })

};
;